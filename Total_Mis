SPOOL ON 
SET TIME ON
SET TIMING ON
--SPOOL D:\QUERY\MIS-TRUNC(SYSDATE-1).LOG
COL DCOL NEW_VALUE MYDATE NOPRINT
COLUMN FILENAME NEW_VAL FILENAME
SELECT 'D:\QUERY\MIS_DAILY_LOG-' || TO_CHAR (SYSDATE, 'YYYYMMDDHH24MI') || '.LOG' FILENAME FROM DUAL;
SPOOL &FILENAME;


SET ECHO ON
SET TERMOUT ON

ALTER SESSION SET NLS_DATE_FORMAT='DD-MON-YYYY HH24:MI:SS';
SELECT SYSDATE  FROM DUAL;
UPDATE WDATE SET WDATE = '01-JAN-1900';

DROP INDEX LNMAS1_LBRPRDACCT_IDX;
DROP INDEX LNMAS_LBRPRDACCT_IDX;
DROP INDEX DAMT_LBRPRDACCT_IDX ;
DROP INDEX TCHKMAS_LBRPRDACCT_IDX;
DROP INDEX CBLMAS_LBRPRDACCT_IDX;
DROP INDEX LNMAS1_LBRPRDACCT_IDX;
DROP INDEX LNMAS_LBRPRDACCT_IDX;
DROP INDEX DAMT_LBRPRDACCT_IDX;
DROP INDEX TCHKMAS_LBRPRDACCT_IDX;
DROP INDEX CUSMAS_CUSTNO_IDX;
DROP INDEX TDRECT_LBRPRDACCT_IDX;
DROP INDEX TDREC_RLBRRPRDACCT_IDX;
DROP INDEX INTRECPAY_LBRPRDCD_IDX;
DROP INDEX INTRECPAYFIN_LBRPRDACCT_IDX;
DROP TABLE TESTDB.D009021  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.D001118  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.D001018  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.D030003  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.D001107  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.D009043  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.D001116  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.D001002  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.D001003  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.D010064  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.CBLMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNCCMAS1  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNCCMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.MAXLIM  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNMAS11  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.MAXDLIM  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNMAS1  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TCCMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.CCMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TTLNMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNMASTEMP  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.FDISDET  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.DAMT  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.REVMASPRI  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.REVMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TOFFSETW CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TOFFSET  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.XINTRATEMASTER  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.XOFFSETMASTER  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.INTTABLE CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.INTTABLE1 CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.OFFSET  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNSURMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TCHKMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.CHKMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.CUSMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.GLMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.MAXCURCDASK  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.FRXCURRATETSG  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.SECTEMP  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.SECTEMP1  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.SECMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.SECDET  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TDMAIN  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TDREC_TMP  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TDREC_TMP1  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TDREC_NEW  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TDRECT  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TDRECT_ARS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TDRECT1  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TDREC  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.PLDEF  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.MINUSPLUS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.PLACCT  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.PLMAS  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.INTRECPAY  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.INTRECPAYFIN  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNMASTMP  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNTALLY  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.CHKTALLY  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TDTALLY  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.ALLTALLY  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.FINTALLY  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TDOFFLINE  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNOFF1  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.CDOFF  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.SBOFF  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TOTRECCHE   CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TOTREC  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.TOTINTREC  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.DDSMAS1  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.NONFUNDMAST  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.NONFUNDSUBLIMIT  CASCADE CONSTRAINT PURGE;
DROP TABLE TESTDB.LNMAS_FN  CASCADE CONSTRAINT PURGE;




CREATE TABLE TESTDB.D001118 AS SELECT * FROM ACBL.D001118@MISPROD;
CREATE TABLE TESTDB.D001018 AS SELECT * FROM ACBL.D001018@MISPROD;
CREATE TABLE TESTDB.D030003 AS SELECT * FROM ACBL.D030003@MISPROD;
CREATE TABLE TESTDB.D001107 AS SELECT * FROM ACBL.D001107@MISPROD;
CREATE TABLE TESTDB.D009043 AS SELECT * FROM ACBL.D009043@MISPROD;
CREATE TABLE TESTDB.D001116 AS SELECT * FROM ACBL.D001116@MISPROD;
CREATE TABLE TESTDB.D001002 AS SELECT * FROM ACBL.D001002@MISPROD;
CREATE TABLE TESTDB.D001003 AS SELECT * FROM ACBL.D001003@MISPROD;
CREATE TABLE TESTDB.D010064 AS SELECT * FROM ACBL.D010064@MISPROD;
CREATE TABLE TESTDB.D009021 AS SELECT * FROM ACBL.D009021@MISPROD;

====================RECMASTER=====================================================

================================OLD================================================
--DROP TABLE RECMASTER PURGE;
--CREATE TABLE RECMASTER AS 
--SELECT LBRCODE AS BRCODE, TRIM(SUBSTR(PRDACCTID,1,8)) AS ACID, CAST(SUBSTR(PRDACCTID,17,8)AS INTEGER) AS ACNO, PRDACCTID AS ACID1, 
--ALMTOTSANCLIMIT AS SANLIMIT, ALMSANCDATE AS SANDATE, ALMEXPDATE AS EXPDATE, CBLTOTOUTSTANDING AS OS, DRAWPWR AS DP, CBLINTRBLOUTSTAND AS IOVERDUE, PRINOVERDUE AS POVERDUE,  INSTALMENT AS ODINST,
--CBLOVERDUEAMT AS OVERDUE, LASTCRDATE AS LDATE FROM ACBL.D841159@MISPROD 
--WHERE EFFDATE = '16-SEP-2022'  ORDER BY LBRCODE, PRDACCTID;

===============================NEW AS ON DATE 07-12-2021======================================================

--DROP TABLE DEFLIST PURGE;
--CREATE TABLE DEFLIST AS 
--SELECT A.EFFDATE,B.OVERDUESINCEDATE,A.LBRCODE,A.PRDACCTID,RTRIM(SUBSTR(A.PRDACCTID, 1, 8)) AS PRDCD,LTRIM(cast(SUBSTR(A.PRDACCTID, 9, 16) as integer)) AS ACNO,
--A.MAINBALFCY,A.ADVAMOUNT AS SANLIMIT,A.EXPIRYDATE,
------A.SANCDATE AS SANDATE,
--A.INTPRVD,A.INTPAID,A.INTRECPRVD,A.INTRECPAID,A.CHARGESPRVD,A.CHARGESPAID,A.PRINCIPALDP,A.PRINCIPALOVERDUE,
--A.PRINCIPALOVERDUE AS TOTALOVERDUE,A.DAYSBETWEENEXPTODATE AS ODINST,
------CASE WHEN A.DAYSBETWEENEXPTODATE < 0 THEN 0 ELSE A.DAYSBETWEENEXPTODATE END ODINST,
--CASE WHEN A.PRINCIPALOVERDUE = 0 THEN 0 ELSE ((A.PRINCIPALOVERDUE-(A.INTRECPRVD-A.INTRECPAID))) END POVERDUE,
-----(A.PRINCIPALOVERDUE-(A.INTRECPRVD-A.INTRECPAID)) AS POVERDUE,
--(A.PRINCIPALOVERDUE-(A.PRINCIPALOVERDUE-(A.INTRECPRVD-A.INTRECPAID))) AS IOVERDUE
--FROM ACBL.D035714@MISPROD A LEFT JOIN ACBL.D035715@MISPROD B ON (A.EFFDATE=B.EFFDATE AND A.LBRCODE=B.LBRCODE AND A.PRDACCTID=B.PRDACCTID)
--WHERE A.EFFDATE='16-SEP-2022';

--================================================================================================================

--UPDATE DEFLIST SET POVERDUE = PRINCIPALOVERDUE WHERE PRINCIPALOVERDUE <>0 AND POVERDUE < 0 AND LBRCODE >1 ;
--COMMIT;

--DROP TABLE RECMASTER PURGE;
--CREATE TABLE RECMASTER AS 
--SELECT TO_CHAR(SYSDATE,'DD-MON-YYYY HH:MI:SS AM') AS RUNTIME,EFFDATE AS ASONDATE,LBRCODE AS BRCODE,TRIM(SUBSTR(PRDACCTID,1,8)) AS ACID, 
--CAST(SUBSTR(PRDACCTID,17,8)AS INTEGER) AS ACNO,
--PRDACCTID AS ACID1,SANLIMIT,EXPIRYDATE AS EXPDATE, MAINBALFCY AS OS, PRINCIPALDP AS DP,IOVERDUE,POVERDUE,ODINST,
--TOTALOVERDUE AS OVERDUE FROM DEFLIST
--ORDER BY LBRCODE, PRDACCTID;

--=============================NEW QUERY FOR ZONE 16-OCT-2024============================================================
DROP TABLE TESTDB.ZONE PURGE;
CREATE TABLE TESTDB.ZONE AS
SELECT SYSDATE RUNTIME, Z.* FROM (
--2--
SELECT 
ROW_NUMBER () OVER (ORDER BY PBRCODE) SR_NO,
CASE WHEN ZONECODE = 0 THEN 'HO' WHEN ZONECODE = 1 THEN 'MZ' WHEN ZONECODE = 2 THEN 'NZ' WHEN ZONECODE = 3 THEN 'PZ' END AS ZONE_ABBR,
A.* FROM (
--1--
SELECT
PBRCODE, (NAME) NAME,
---------------------------------------------------------------------------------------------------------------------------------------------------
--AS PER OO_584_06092024
CASE 
WHEN PBRCODE IN (1,900,901,902,903) THEN 0
WHEN PBRCODE IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 24, 25, 26, 27, 28, 30, 34, 38, 39, 57, 58, 69, 70, 71, 73, 75, 79, 80, 84, 87, 91, 92, 94, 95, 105, 106, 110, 115, 116, 117) THEN 1
WHEN PBRCODE IN (14, 15, 16, 17, 18, 19, 22, 23, 31, 32, 35, 37, 40, 41, 56, 59, 60, 61, 62, 63, 65, 66, 67, 81, 82, 83, 85, 86, 88, 89, 90, 96, 97, 98, 99, 100, 102, 103, 104, 107, 108, 109, 111, 112, 114, 119, 120, 123) THEN 2
WHEN PBRCODE IN (42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 68, 93, 101, 113, 121) THEN 3
WHEN PBRCODE IN (29) THEN 999999
WHEN PBRCODE IN (36) THEN 999999
WHEN PBRCODE IN (118) THEN 999999
WHEN PBRCODE IN (122) THEN 999999
END ZONECODE,
CASE 
WHEN PBRCODE IN (1,900,901,902,903) THEN 'Head Office'
WHEN PBRCODE IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 24, 25, 26, 27, 28, 30, 34, 38, 39, 57, 58, 69, 70, 71, 73, 75, 79, 80, 84, 87, 91, 92, 94, 95, 105, 106, 110, 115, 116, 117) THEN 'Mumbai Zone'
WHEN PBRCODE IN (14, 15, 16, 17, 18, 19, 22, 23, 31, 32, 35, 37, 40, 41, 56, 59, 60, 61, 62, 63, 65, 66, 67, 81, 82, 83, 85, 86, 88, 89, 90, 96, 97, 98, 99, 100, 102, 103, 104, 107, 108, 109, 111, 112, 114, 119, 120, 123) THEN 'Navi Mumbai Zone'
WHEN PBRCODE IN (42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 68, 93, 101, 113, 121) THEN 'Pune Zone'
WHEN PBRCODE IN (29) THEN 'Close_20241015'
WHEN PBRCODE IN (36) THEN 'Close_20230605'
WHEN PBRCODE IN (118) THEN 'Close_20230529'
WHEN PBRCODE IN (122) THEN 'Close_20230704'
END ZONENAME,
---------------------------------------------------------------------------------------------------------------------------------------------------
CASE 
WHEN PBRCODE IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 39, 91, 94, 115, 116, 117) THEN 'C1_Sewri_MZ'
WHEN PBRCODE IN (20, 21, 24, 25, 26, 27, 28, 30, 34, 57, 79, 80, 84, 87, 92, 95, 105, 106, 110) THEN 'C2_Bandra_MZ'
WHEN PBRCODE IN (15, 16, 17, 18, 19, 22, 31, 32, 35, 37, 56, 65, 66, 67, 81, 85, 89, 96, 97, 102, 103, 114, 120, 123) THEN 'C3_Vashi_NMZ'
WHEN PBRCODE IN (14, 23, 40, 41, 82, 83, 86, 88, 90, 98, 99, 100, 104, 107, 108, 109, 111, 112, 119) THEN 'C4_Dombivli_(E)_NMZ'
WHEN PBRCODE IN (42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 68, 93, 101, 113, 121) THEN 'C5_Pune_PZ' --OO-592-13-12-2024
END CLUSTER_NAME,
---------------------------------------------------------------------------------------------------------------------------------------------------
--SOURCE DEVELOPMENT DEPT. 30/01/2025--
CASE 
WHEN PBRCODE IN (58,69,70,71,73,75) THEN 54
WHEN PBRCODE IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 56, 57, 65, 66, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123) THEN 60
WHEN PBRCODE IN (59, 60, 61, 62, 63) THEN 84
END AS STATE_CODE_MPFI,
---------------------------------------------------------------------------------------------------------------------------------------------------
--SOURCE DEVELOPMENT DEPT. 30/01/2025--
CASE 
WHEN PBRCODE IN (58,69,70,71,73,75) THEN 'Gujarat'
WHEN PBRCODE IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 56, 57, 65, 66, 67, 68, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 123) THEN 'Maharashtra'
WHEN PBRCODE IN (59, 60, 61, 62, 63) THEN 'STATE'
END AS STATE_DESC_MPFI,
---------------------------------------------------------------------------------------------------------------------------------------------------
--SOURCE DEVELOPMENT DEPT. 30/01/2025--
CASE 
WHEN PBRCODE IN (3, 4, 7, 8, 9, 20, 21, 24, 25, 26, 27, 28, 29, 30, 34, 39, 80, 84, 91, 105, 106, 110, 117) THEN 291
WHEN PBRCODE IN (57, 92, 95) THEN 382
WHEN PBRCODE IN (58) THEN 550
WHEN PBRCODE IN (69, 70, 71, 73, 75) THEN 570
WHEN PBRCODE IN (1, 2, 5, 6, 10, 11, 12, 13, 38, 94, 115, 116) THEN 600
WHEN PBRCODE IN (14, 15, 16, 17, 22, 23, 31, 32, 37, 40, 41, 65, 79, 82, 83, 87, 88, 89, 90, 96, 98, 104, 107, 108, 109, 119) THEN 601
WHEN PBRCODE IN (18, 19, 35, 56, 67, 81, 97, 120, 123) THEN 603
WHEN PBRCODE IN (85) THEN 607
WHEN PBRCODE IN (42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 93, 113) THEN 620
WHEN PBRCODE IN (121) THEN 622
WHEN PBRCODE IN (68, 101) THEN 624
WHEN PBRCODE IN (103, 114) THEN 632
WHEN PBRCODE IN (66, 102) THEN 640
WHEN PBRCODE IN (86, 99, 100, 111, 112) THEN 650
WHEN PBRCODE IN (62) THEN 880
WHEN PBRCODE IN (59, 60, 61, 63) THEN 881
END AS DISTRICT_CODE_MPFI,
---------------------------------------------------------------------------------------------------------------------------------------------------
--SOURCE DEVELOPMENT DEPT. 30/01/2025--
CASE 
WHEN PBRCODE IN (3, 4, 7, 8, 9, 20, 21, 24, 25, 26, 27, 28, 29, 30, 34, 39, 80, 84, 91, 105, 106, 110, 117) THEN 'Mumbai'
WHEN PBRCODE IN (57, 92, 95) THEN 'Palghar'
WHEN PBRCODE IN (58) THEN 'Vadodara'
WHEN PBRCODE IN (69, 70, 71, 73, 75) THEN 'Ahmedabad'
WHEN PBRCODE IN (1, 2, 5, 6, 10, 11, 12, 13, 38, 94, 115, 116) THEN 'Mumbai'
--WHEN PBRCODE IN (14, 15, 16, 17, 22, 23, 31, 32, 37, 40, 41, 65, 79, 82, 83, 87, 88, 89, 90, 96, 98, 104, 107, 108, 109, 119) THEN 601
--SAME CODE FOR NAVI MUMBAI AND THANE
WHEN PBRCODE IN (15,16,17,22,31,32,37,65,89,96) THEN 'Navi Mumbai'
WHEN PBRCODE IN (14,23,40,41,79,82,83,87,88,90,98,104,107,108,109,119) THEN 'Thane'
WHEN PBRCODE IN (18, 19, 35, 56, 67, 81, 97, 120, 123) THEN 'Raigad'
WHEN PBRCODE IN (85) THEN 'Sindhudurg'
WHEN PBRCODE IN (42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 93, 113) THEN 'Pune'
WHEN PBRCODE IN (121) THEN 'Ahmednagar'
WHEN PBRCODE IN (68, 101) THEN 'Aurangabad'
WHEN PBRCODE IN (103, 114) THEN 'Nanded'
WHEN PBRCODE IN (66, 102) THEN 'Nagpur'
WHEN PBRCODE IN (86, 99, 100, 111, 112) THEN 'Nashik'
WHEN PBRCODE IN (62) THEN 'Dakshina Kannada'
WHEN PBRCODE IN (59, 60, 61, 63) THEN 'Udupi'
END AS DISTRICT_DESC_MPFI,
---------------------------------------------------------------------------------------------------------------------------------------------------
--SOURCE DEVELOPMENT DEPT. 30/01/2025--
CASE 
WHEN PBRCODE IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 53, 55, 57, 58, 65, 66, 68, 69, 70, 71, 73, 75, 80, 82, 83, 84, 86, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 119) THEN 4
WHEN PBRCODE IN (52, 56, 61, 63, 85, 93, 113, 123) THEN 2
WHEN PBRCODE IN (18, 19, 23, 59, 60, 62, 67, 79, 81, 87, 88, 97, 103, 109, 114, 120, 121) THEN 3
END AS LOCATION_TYPE_CODE_MPFI,
---------------------------------------------------------------------------------------------------------------------------------------------------
--SOURCE DEVELOPMENT DEPT. 30/01/2025--
CASE 
WHEN PBRCODE IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 51, 53, 55, 57, 58, 65, 66, 68, 69, 70, 71, 73, 75, 80, 82, 83, 84, 86, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111, 112, 115, 116, 117, 119) THEN 'Metropolitan'
WHEN PBRCODE IN (52, 56, 61, 63, 85, 93, 113, 123) THEN 'Semi_Urban'
WHEN PBRCODE IN (18, 19, 23, 59, 60, 62, 67, 79, 81, 87, 88, 97, 103, 109, 114, 120, 121) THEN 'Urban'
END AS LOCATION_TYPE_DESC_MPFI,
---------------------------------------------------------------------------------------------------------------------------------------------------
CASE 
WHEN PBRCODE IN (1,900,901,902,903) THEN 0
WHEN PBRCODE IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 24, 25, 26, 27, 28, 29, 30, 34, 38, 39, 57, 58, 69, 70, 71, 73, 75, 79, 80, 84, 87, 91, 92, 94, 95, 105, 106, 110, 115, 116, 117, 118, 122) THEN 1
WHEN PBRCODE IN (14, 15, 16, 17, 18, 19, 22, 23, 31, 32, 35, 36, 37, 40, 41, 56, 65, 66, 67, 81, 82, 83, 85, 88, 89, 90, 96, 97, 98, 102, 104, 107, 108, 109, 119, 120, 123) THEN 2
WHEN PBRCODE IN (42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 59, 60, 61, 62, 63, 68, 86, 93, 99, 100, 101, 103, 111, 112, 113, 114, 121) THEN 3
END AS ZONECODE_20240906,
---------------------------------------------------------------------------------------------------------------------------------------------------
CASE 
WHEN PBRCODE IN (1,900,901,902,903) THEN 'Head Office'
WHEN PBRCODE IN (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 20, 21, 24, 25, 26, 27, 28, 29, 30, 34, 38, 39, 57, 58, 69, 70, 71, 73, 75, 79, 80, 84, 87, 91, 92, 94, 95, 105, 106, 110, 115, 116, 117, 118, 122) THEN 'Mumbai Zone'
WHEN PBRCODE IN (14, 15, 16, 17, 18, 19, 22, 23, 31, 32, 35, 36, 37, 40, 41, 56, 65, 66, 67, 81, 82, 83, 85, 88, 89, 90, 96, 97, 98, 102, 104, 107, 108, 109, 119, 120, 123) THEN 'Navi Mumbai Zone'
WHEN PBRCODE IN (42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 59, 60, 61, 62, 63, 68, 86, 93, 99, 100, 101, 103, 111, 112, 113, 114, 121) THEN 'Pune Zone'
END AS ZONENAME_20240906,
---------------------------------------------------------------------------------------------------------------------------------------------------
CASE 
WHEN PBRCODE IN (1,900,901,902,903) THEN 0
WHEN PBRCODE IN (6, 13, 20, 21, 24, 25, 26, 27, 28, 30, 34, 38, 57, 79, 80, 84, 87, 92, 95, 105, 106, 110, 115, 116) THEN 1
WHEN PBRCODE IN (2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 23, 29, 39, 40, 41, 82, 83, 88, 90, 91, 94, 98, 104, 107, 108, 109, 117, 118, 119, 122) THEN 2
WHEN PBRCODE IN (15, 16, 17, 18, 19, 22, 31, 32, 35, 36, 37, 56, 65, 66, 67, 81, 85, 86, 89, 96, 97, 99, 100, 102, 111, 112, 120, 123) THEN 3
WHEN PBRCODE IN (42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 68, 93, 101, 103, 113, 114, 121) THEN 4
WHEN PBRCODE IN (59, 60, 61, 62, 63, 64) THEN 5
WHEN PBRCODE IN (58, 69, 70, 71, 73, 74, 75, 76, 77, 78) THEN 6
END AS ZONECODE_20230526,
CASE 
WHEN PBRCODE IN (1,900,901,902,903) THEN 'Head Office'
WHEN PBRCODE IN (6, 13, 20, 21, 24, 25, 26, 27, 28, 30, 34, 38, 57, 79, 80, 84, 87, 92, 95, 105, 106, 110, 115, 116) THEN 'Western'
WHEN PBRCODE IN (2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 23, 29, 39, 40, 41, 82, 83, 88, 90, 91, 94, 98, 104, 107, 108, 109, 117, 118, 119, 122) THEN 'Central'
WHEN PBRCODE IN (15, 16, 17, 18, 19, 22, 31, 32, 35, 36, 37, 56, 65, 66, 67, 81, 85, 86, 89, 96, 97, 99, 100, 102, 111, 112, 120, 123) THEN 'Navi Mumbai'
WHEN PBRCODE IN (42, 43, 44, 46, 47, 48, 51, 52, 53, 55, 68, 93, 101, 103, 113, 114, 121) THEN 'Pune'
WHEN PBRCODE IN (59, 60, 61, 62, 63, 64) THEN 'Udupi'
WHEN PBRCODE IN (58, 69, 70, 71, 73, 74, 75, 76, 77, 78) THEN 'Ahmedabad'
END AS ZONENAME_20230526,
AREA, (SELECT CODEDESC FROM ACBL.D001002@MISPROD WHERE CODETYPE = 101003 AND CODE = AREA) AREA_DESC,
PINCODE, 
CITYCD, (SELECT PLACECDDESC FROM ACBL.D500028@MISPROD WHERE PLACECD = CITYCD) CITYCD_DESC
FROM ACBL.D001003@MISPROD
--1--
) A
--2--
) Z;
COMMIT;
DELETE FROM ZONE WHERE PBRCODE IN (29,36,118,122);
COMMIT;

=========================================================================================


=============================NEW QUERY CHECKING PURPOSE============================================================


DROP TABLE DEFLIST PURGE;
CREATE TABLE DEFLIST AS 
SELECT A.EFFDATE,B.OVERDUESINCEDATE,A.LBRCODE,A.PRDACCTID,RTRIM(SUBSTR(A.PRDACCTID, 1, 8)) AS PRDCD,LTRIM(cast(SUBSTR(A.PRDACCTID, 9, 16) as integer)) AS ACNO,
A.MAINBALFCY,A.ADVAMOUNT AS SANLIMIT,A.EXPIRYDATE,
--A.SANCDATE AS SANDATE,
A.INTPRVD,A.INTPAID,A.INTRECPRVD,A.INTRECPAID,A.CHARGESPRVD,A.CHARGESPAID,A.PRINCIPALDP,A.PRINCIPALOVERDUE,A.PENALPRVD,A.PENALPAID,
A.PRINCIPALOVERDUE AS TOTALOVERDUE,A.INTERESTOVERDUE,A.NPAINTPRVD,
CASE WHEN A.PRINCIPALOVERDUE = A.INTERESTOVERDUE THEN (A.PRINCIPALOVERDUE +(A.CHARGESPRVD-A.CHARGESPAID))
ELSE (A.PRINCIPALOVERDUE + A.INTERESTOVERDUE+(A.CHARGESPRVD - A.CHARGESPAID)) END TOT,
A.DAYSBETWEENEXPTODATE AS ODINST,
----CASE WHEN A.DAYSBETWEENEXPTODATE < 0 THEN 0 ELSE A.DAYSBETWEENEXPTODATE END ODINST,
CASE WHEN A.PRINCIPALOVERDUE = 0 THEN 0 ELSE ((A.PRINCIPALOVERDUE-(A.INTRECPRVD-A.INTRECPAID))) END POVERDUE,
---(A.PRINCIPALOVERDUE-(A.INTRECPRVD-A.INTRECPAID)) AS POVERDUE,
(A.PRINCIPALOVERDUE-(A.PRINCIPALOVERDUE-(A.INTRECPRVD-A.INTRECPAID))) AS IOVERDUE
FROM ACBL.D035714@MISPROD A LEFT JOIN ACBL.D035715@MISPROD B ON (A.EFFDATE=B.EFFDATE AND A.LBRCODE=B.LBRCODE AND A.PRDACCTID=B.PRDACCTID)
WHERE A.EFFDATE=TRUNC(SYSDATE-1);


--UPDATE DEFLIST SET POVERDUE = PRINCIPALOVERDUE WHERE PRINCIPALOVERDUE <>0 AND POVERDUE < 0 AND LBRCODE >1 ;
--COMMIT;

UPDATE DEFLIST SET POVERDUE = PRINCIPALOVERDUE WHERE PRINCIPALOVERDUE <>0 AND POVERDUE < 0;
COMMIT;

DROP TABLE RECMASTER PURGE;
CREATE TABLE RECMASTER AS 
SELECT TO_CHAR(SYSDATE,'DD-MON-YYYY HH:MI:SS AM') AS RUNTIME,EFFDATE AS ASONDATE,LBRCODE AS BRCODE,TRIM(SUBSTR(PRDACCTID,1,8)) AS ACID, 
CAST(SUBSTR(PRDACCTID,17,8)AS INTEGER) AS ACNO,
PRDACCTID AS ACID1,SANLIMIT,EXPIRYDATE AS EXPDATE, MAINBALFCY AS OS, PRINCIPALDP AS DP,IOVERDUE,POVERDUE,ODINST,
INTPRVD,INTPAID,INTRECPRVD,INTRECPAID,CHARGESPRVD,CHARGESPAID,PENALPRVD,PENALPAID,PRINCIPALDP,PRINCIPALOVERDUE,INTERESTOVERDUE,NPAINTPRVD,
TOTALOVERDUE AS OVERDUE,TOT AS TOTOVERDUE FROM DEFLIST
ORDER BY LBRCODE, PRDACCTID;


========================================================================================

DROP TABLE TESTDB.CBLMAS PURGE;
CREATE TABLE TESTDB.CBLMAS  AS 
SELECT F.LBRCODE,F.PRDACCTID,MAX(F.CBLDATE) AS CBDATE FROM ACBL.D010014@MISPROD F WHERE  F.CBLDATE <= TRUNC(SYSDATE-1) 
GROUP BY F.LBRCODE,F.PRDACCTID ORDER BY F.LBRCODE,F.PRDACCTID;

CREATE INDEX CBLMAS_LBRPRDACCT_IDX ON CBLMAS(LBRCODE,PRDACCTID,CBDATE);

DROP TABLE TESTDB.LNCCMAS1 PURGE;
CREATE TABLE TESTDB.LNCCMAS1 AS
SELECT     B.LBRCODE, B.PRDCD, B.MODULETYPE,C.NAMETITLE,C.PRDACCTID, C.LONGNAME, C.DATEOPEN, C.DATECLOSED, C.DTOFBIRTH, C.ACCTTYPE, 
                      C.ACCTSTAT, C.MODEOPRN,C.CUSTNO, C.LASTDRDATE, C.LASTCRDATE, C.PLRLINKYN,C.DPYN,C.LEDGERNO,E.FROMMNTH1, E.NOOFMNTH1, 
                      E.FROMMNTH2, E.NOOFMNTH2, E.EFFFROMDATE, E.PLRLINKYN AS PLR, E.SANCDATE, E.TOTSANCLIMIT, 
                      E.EXPLESSGRACE,E.EXPDATE, E.EQUATEDYN, E.INTFUNDEDYN, E.NOOFINSTL, E.GRCDAYSFORINST, D.DISBURSEDDATE, 
                      D.DISBURSEDAMT, D.INSTLSTARTDATE, D.INSTLAMT, D.INSTLINTCOMP,  A.LOANTERMCD, A.ASSETCD, A.HEALTHCD, A.OVERDUESINCEDT,A.NPADATE,A.NPAREASONCD,
                      A.NPAREMARKS
FROM         ACBL.D030011@MISPROD A RIGHT OUTER JOIN
                      D009021 B INNER JOIN
                      ACBL.D009022@MISPROD C ON B.LBRCODE = C.LBRCODE AND B.PRDCD = RTRIM(SUBSTR(C.PRDACCTID, 1, 8)) ON 
                      A.LBRCODE = C.LBRCODE AND A.PRDACCTID = C.PRDACCTID LEFT OUTER JOIN
                      ACBL.D009142@MISPROD D RIGHT OUTER JOIN
                      ACBL.D009042@MISPROD E ON D.LBRCODE = E.LBRCODE AND D.PRDACCTID = E.PRDACCTID AND 
                      D.EFFFROMDATE = E.EFFFROMDATE ON C.LBRCODE = E.LBRCODE AND C.PRDACCTID = E.PRDACCTID
WHERE ((B.MODULETYPE IN (13, 30, 31))  AND C.ACCTSTAT <> 3) OR
      ((B.MODULETYPE IN (13, 30, 31))  AND (C.ACCTSTAT = 3 AND C.DATECLOSED > TRUNC(SYSDATE-1))) OR 
      ((B.MODULETYPE IN (13, 30, 31))  AND (C.ACCTSTAT = 3 AND C.DATECLOSED = '01-JAN-1900' AND C.LASTCRDATE > TRUNC(SYSDATE-1)))
ORDER BY B.LBRCODE,C.PRDACCTID;

====================SANCTION LIMIT AS ON REPORT DATE==================================

DELETE FROM LNCCMAS1 WHERE EFFFROMDATE >  TRUNC(SYSDATE-1);

COMMIT;

CREATE TABLE TESTDB.LNCCMAS AS
SELECT A.*, Z.IRPRDACCTID
FROM LNCCMAS1 A LEFT OUTER JOIN ACBL.D030002@MISPROD Z ON A.LBRCODE = Z.LBRCODE AND A.PRDCD = Z.PRDCD;

ALTER TABLE LNCCMAS ADD BRNAME VARCHAR(30);

UPDATE LNCCMAS SET BRNAME = (SELECT NAME FROM D001003 G WHERE LNCCMAS.LBRCODE = G.PBRCODE);

ALTER TABLE LNCCMAS ADD TRMDESC VARCHAR2(35);
ALTER TABLE LNCCMAS ADD HLTDESC VARCHAR2(35);
ALTER TABLE LNCCMAS ADD ASSETDESC VARCHAR2(35);
UPDATE LNCCMAS SET TRMDESC = (SELECT CODEDESC FROM ACBL.D001107@MISPROD Y WHERE Y.CODETYPE = 6000 AND Y.CODE = LNCCMAS.LOANTERMCD);
UPDATE LNCCMAS SET HLTDESC = (SELECT CODEDESC FROM ACBL.D001107@MISPROD Y WHERE Y.CODETYPE = 7000 AND Y.CODE = LNCCMAS.HEALTHCD);
UPDATE LNCCMAS SET ASSETDESC = (SELECT CODEDESC FROM ACBL.D001002@MISPROD YY WHERE YY.CODETYPE = 30013 AND YY.CODE = LNCCMAS.ASSETCD);

CREATE TABLE TESTDB.MAXLIM AS 
SELECT LBRCODE,PRDACCTID,MAX(EFFFROMDATE) AS EFFFROMDATE FROM LNCCMAS WHERE MODULETYPE IN (30,31) 
GROUP BY  LBRCODE,PRDACCTID ORDER BY LBRCODE,PRDACCTID;

CREATE TABLE TESTDB.LNMAS11 AS 
SELECT LNCCMAS.* FROM LNCCMAS,MAXLIM WHERE LNCCMAS.LBRCODE = MAXLIM.LBRCODE AND LNCCMAS.PRDACCTID = MAXLIM.PRDACCTID 
AND LNCCMAS.EFFFROMDATE = MAXLIM.EFFFROMDATE AND LNCCMAS.MODULETYPE IN (30,31) ORDER BY LNCCMAS.LBRCODE,LNCCMAS.PRDACCTID;

CREATE TABLE TESTDB.MAXDLIM AS 
SELECT LBRCODE,PRDACCTID,MAX(DISBURSEDDATE) AS DISBURSEDDATE FROM LNMAS11 WHERE MODULETYPE IN (30,31) GROUP BY  LBRCODE,PRDACCTID ORDER BY LBRCODE,PRDACCTID;
 
CREATE TABLE TESTDB.LNMAS1 AS
SELECT LNMAS11.* FROM LNMAS11,MAXDLIM  WHERE LNMAS11.LBRCODE = MAXDLIM.LBRCODE AND LNMAS11.PRDACCTID = MAXDLIM.PRDACCTID 
AND LNMAS11.DISBURSEDDATE = MAXDLIM.DISBURSEDDATE AND LNMAS11.MODULETYPE IN (30,31) ORDER BY LNMAS11.LBRCODE,LNMAS11.PRDACCTID;

--SELECT * FROM LNMAS1 WHERE LBRCODE=62 AND PRDACCTID='ESCLN   000000000030001200000000'

====AS PER MIS DEPARTMENT REQUIREMENT MAX(TOTSANCLIMIT) CONVERT TO MIN(TOTSANCLIMIT) & CCTYPE CALLBACK MAX(TOTSANCLIMIT) DTD 21/03/2024=========

DROP TABLE MAXLIM_TSG PURGE;
CREATE TABLE TESTDB.MAXLIM_TSG AS 
SELECT * FROM 
(SELECT LBRCODE,PRDACCTID,MIN(EFFFROMDATE) AS EFFFROMDATE,MIN(DISBURSEDDATE) AS DISBURSEDDATE FROM LNCCMAS  WHERE MODULETYPE IN (30,31)  AND LBRCODE<>1 AND PRDACCTID NOT LIKE '%CC%'
GROUP BY LBRCODE,PRDACCTID ORDER BY LBRCODE,PRDACCTID)
UNION ALL
SELECT * FROM 
(SELECT LBRCODE,PRDACCTID,MAX(EFFFROMDATE) AS EFFFROMDATE,MAX(DISBURSEDDATE) AS DISBURSEDDATE FROM LNCCMAS  WHERE LBRCODE=1 AND MODULETYPE IN (30,31)   AND LBRCODE=1
GROUP BY  LBRCODE,PRDACCTID ORDER BY LBRCODE,PRDACCTID)
UNION ALL
SELECT * FROM
(SELECT LBRCODE,PRDACCTID,MAX(EFFFROMDATE) AS EFFFROMDATE,MAX(DISBURSEDDATE) AS DISBURSEDDATE FROM LNCCMAS  WHERE MODULETYPE IN (30,31)  AND LBRCODE<>1 AND PRDACCTID LIKE '%CC%'
GROUP BY LBRCODE,PRDACCTID ORDER BY LBRCODE,PRDACCTID);

---SELECT * FROM MAXLIM_TSG

DROP TABLE LNMAS11_TSG PURGE;
CREATE TABLE TESTDB.LNMAS11_TSG AS 
SELECT LNCCMAS.* FROM LNCCMAS,MAXLIM_TSG WHERE LNCCMAS.LBRCODE = MAXLIM_TSG.LBRCODE AND LNCCMAS.PRDACCTID = MAXLIM_TSG.PRDACCTID 
AND LNCCMAS.EFFFROMDATE = MAXLIM_TSG.EFFFROMDATE AND LNCCMAS.DISBURSEDDATE = MAXLIM_TSG.DISBURSEDDATE AND LNCCMAS.MODULETYPE IN (30,31) 
ORDER BY LNCCMAS.LBRCODE,LNCCMAS.PRDACCTID;

---SELECT * FROM LNMAS11_TSG WHERE LBRCODE=62 AND PRDACCTID='ESCLN   000000000030001200000000'

UPDATE LNMAS1  SET TOTSANCLIMIT = (SELECT  H.TOTSANCLIMIT  FROM LNMAS11_TSG H  WHERE LNMAS1.LBRCODE =H.LBRCODE AND LNMAS1.PRDACCTID = H.PRDACCTID);
COMMIT;

UPDATE LNMAS1  SET SANCDATE = (SELECT  H.SANCDATE  FROM LNMAS11_TSG H  WHERE LNMAS1.LBRCODE =H.LBRCODE AND LNMAS1.PRDACCTID = H.PRDACCTID);
COMMIT;

UPDATE LNMAS1  SET NOOFINSTL= (SELECT  H.NOOFINSTL  FROM LNMAS11_TSG H  WHERE LNMAS1.LBRCODE =H.LBRCODE AND LNMAS1.PRDACCTID = H.PRDACCTID);
COMMIT;

---SELECT * FROM LNMAS1 WHERE LBRCODE=62 AND PRDACCTID LIKE '%ESCLN%300012%'

=========================================================================================================================================================

CREATE TABLE TESTDB.TCCMAS AS 
SELECT LBRCODE,PRDACCTID,MAX(EFFFROMDATE) AS EFFFROMDATE FROM LNCCMAS  WHERE MODULETYPE IN (13) AND (ACCTSTAT <> 3 OR (ACCTSTAT = 3 AND DATECLOSED > TRUNC(SYSDATE-1)))  
GROUP BY LBRCODE,PRDACCTID  ORDER BY LNCCMAS.LBRCODE,LNCCMAS.PRDACCTID;

CREATE TABLE TESTDB.CCMAS AS  SELECT LNCCMAS.* FROM LNCCMAS,TCCMAS WHERE LNCCMAS.LBRCODE = TCCMAS.LBRCODE AND LNCCMAS.PRDACCTID = TCCMAS.PRDACCTID 
AND LNCCMAS.EFFFROMDATE = TCCMAS.EFFFROMDATE ORDER BY  LNCCMAS.LBRCODE,LNCCMAS.PRDACCTID;

INSERT INTO LNMAS1 SELECT * FROM CCMAS;

COMMIT;

CREATE INDEX LNMAS1_LBRPRDACCT_IDX ON LNMAS1(LBRCODE,PRDACCTID);

CREATE TABLE TESTDB.TTLNMAS AS 
SELECT  LNMAS1.*,F.CBLDATE, F.BALANCE1, F.BALANCE2, F.BALANCE3, F.BALANCE4, F.BALANCE5, F.BALANCE6, 
                      F.BALANCE7, F.BALANCE8, F.BALANCE9, F.BALANCE10, F.BALANCE11, F.BALANCE12, F.BALANCE13, 
                      F.BALANCE14, F.BALANCE15
FROM         ACBL.D010014@MISPROD F INNER JOIN
                      CBLMAS ON F.LBRCODE = CBLMAS.LBRCODE AND F.PRDACCTID = CBLMAS.PRDACCTID AND 
                      F.CBLDATE = CBLMAS.CBDATE RIGHT OUTER JOIN  LNMAS1 ON CBLMAS.LBRCODE = LNMAS1.LBRCODE AND CBLMAS.PRDACCTID = LNMAS1.PRDACCTID;

ALTER TABLE TTLNMAS ADD OS NUMBER(13,2);
ALTER TABLE TTLNMAS ADD INTREC NUMBER(13,2);

UPDATE TTLNMAS SET OS = ((BALANCE1 * (-1)) + BALANCE4 - BALANCE5) WHERE MODULETYPE IN (30,31); 

COMMIT;

UPDATE TTLNMAS SET OS = OS * (-1) WHERE MODULETYPE IN (30,31);

UPDATE TTLNMAS SET INTREC =  BALANCE6 - BALANCE7 WHERE MODULETYPE IN (30,31); 

================(MODULETYPE 13 INTREC UPDATE DATE START DATE :-18/02/2023)

UPDATE TTLNMAS SET INTREC =  BALANCE11 * (-1)  WHERE MODULETYPE IN (13); 

UPDATE TTLNMAS SET INTREC = INTREC * (-1) WHERE MODULETYPE IN (30,31);

UPDATE TTLNMAS SET OS = BALANCE4 WHERE MODULETYPE IN (13);

COMMIT;

SELECT SYSDATE  FROM DUAL;

/*------- RECMASTER USING START---------*/

CREATE TABLE TESTDB.LNMASTEMP AS
SELECT TTLNMAS.*,Z.DP,Z.IOVERDUE,Z.POVERDUE,Z.ODINST,Z.OVERDUE FROM TTLNMAS LEFT OUTER JOIN RECMASTER Z ON TTLNMAS.LBRCODE = Z.BRCODE AND TTLNMAS.PRDACCTID = Z.ACID1;       
UPDATE TESTDB.LNMASTEMP SET IOVERDUE = 0 WHERE IOVERDUE IS NULL;
UPDATE TESTDB.LNMASTEMP SET POVERDUE = 0 WHERE POVERDUE IS NULL;
COMMIT;

==================changes done AS ON DATE 20/07/2021---REFRANCE GAWADE SIR MAIL=============================================


--UPDATE LNMASTEMP SET POVERDUE = BALANCE4 * (-1) WHERE (BALANCE4 < 0) AND  (ACCTSTAT IN (4, 9, 10, 11, 12)) AND (RTRIM(SUBSTR(PRDCD,1,8)) IN ('CC','ZCC'));
--COMMIT;
--UPDATE LNMASTEMP SET OVERDUE = POVERDUE WHERE  (BALANCE4 < 0) AND (ACCTSTAT IN (4, 9, 10, 11, 12)) AND (RTRIM(SUBSTR(PRDCD,1,8)) IN ('CC','ZCC')); 
--COMMIT;

UPDATE LNMASTEMP SET POVERDUE = BALANCE4 * (-1) WHERE (BALANCE4 < 0) AND  (ACCTSTAT IN (4, 9, 10, 11, 12)) AND (RTRIM(SUBSTR(PRDCD,1,8)) IN ('CC','ZCC','SODGLD','SODIMP','RCL'));
COMMIT;
UPDATE LNMASTEMP SET OVERDUE = POVERDUE WHERE  (BALANCE4 < 0) AND (ACCTSTAT IN (4, 9, 10, 11, 12)) AND (RTRIM(SUBSTR(PRDCD,1,8)) IN ('CC','ZCC','SODGLD','SODIMP','RCL')); 
COMMIT;




CREATE TABLE TESTDB.FDISDET AS
SELECT     D.LBRCODE, D.PRDACCTID, MIN(D.EFFFROMDATE) AS EFFFROMDATE, MIN(D.DISBURSEDDATE) AS DISBURSEDDATE, MIN(INSTLSTARTDATE) AS  INSTLSTARTDATE
FROM         ACBL.D009142@MISPROD D INNER JOIN  ACBL.D009021@MISPROD B ON D.LBRCODE = B.LBRCODE AND RTRIM(SUBSTR(D.PRDACCTID,1,8)) = B.PRDCD WHERE     (B.MODULETYPE IN (30, 31)) GROUP BY D.LBRCODE, D.PRDACCTID;

CREATE TABLE TESTDB.LNMAS AS 
SELECT LNMASTEMP.*,FDISDET.DISBURSEDDATE AS DISBDATE,FDISDET.INSTLSTARTDATE AS INSTDATE 
FROM LNMASTEMP LEFT OUTER JOIN FDISDET ON LNMASTEMP.LBRCODE = FDISDET.LBRCODE AND LNMASTEMP.PRDACCTID = FDISDET.PRDACCTID ORDER BY LNMASTEMP.LBRCODE,LNMASTEMP.PRDACCTID;

CREATE INDEX LNMAS_LBRPRDACCT_IDX ON LNMAS(LBRCODE,PRDACCTID);

CREATE TABLE DAMT AS  SELECT  H.LBRCODE,H.PRDACCTID,H.DISBURSEDAMTFCY  FROM LNMAS, D030003 H  WHERE LNMAS.LBRCODE =H.LBRCODE AND LNMAS.PRDACCTID = H.PRDACCTID;

CREATE INDEX DAMT_LBRPRDACCT_IDX ON DAMT(LBRCODE,PRDACCTID);

UPDATE LNMAS SET DISBURSEDAMT = (SELECT  H.DISBURSEDAMTFCY  FROM DAMT H  WHERE LNMAS.LBRCODE =H.LBRCODE AND LNMAS.PRDACCTID = H.PRDACCTID);
COMMIT;

UPDATE LNMAS SET DISBURSEDDATE = DISBDATE WHERE MODULETYPE IN (30,31);

UPDATE LNMAS SET INSTLSTARTDATE = INSTDATE WHERE MODULETYPE IN (30,31);

COMMIT;

ALTER TABLE LNMAS ADD SRLNO NUMBER(6) DEFAULT 0;
ALTER TABLE LNMAS ADD DESC1 VARCHAR2(100);

DROP TABLE REVMASPRI;
CREATE TABLE TESTDB.REVMASPRI AS               
SELECT I.LBRCODE,I.PRDACCTID,MAX(I.EFFFROMDATE) AS EFFFROMDATE FROM D009043 I WHERE RTRIM(SUBSTR(I.PRDACCTID,1,8)) = 'CC' AND I.EFFFROMDATE <= TRUNC(SYSDATE-1)
GROUP BY I.LBRCODE, I.PRDACCTID ORDER BY I.LBRCODE, I.PRDACCTID;

DROP TABLE TESTDB.REVMAS;
CREATE TABLE TESTDB.REVMAS AS 
SELECT II.LBRCODE,II.PRDACCTID,II.EFFFROMDATE,II.REVDUEDT1,II.REVDONEDT1,II.REVDUEDT2,II.REVDONEDT2  
FROM D009043 II INNER JOIN REVMASPRI B ON (II.LBRCODE = B.LBRCODE AND II.PRDACCTID = B.PRDACCTID AND II.EFFFROMDATE = B.EFFFROMDATE)
WHERE  RTRIM(SUBSTR(II.PRDACCTID,1,8)) = 'CC' ORDER BY II.LBRCODE,II.PRDACCTID; 


---------------------CODE CHANGES ON 11-09-2015 BY ASHITA FOR INTEREST RATE-------------------------
--CREATE TABLE TOFFSETW AS
--SELECT LBRCODE,PRDACCTID,MAX(EFFFROMDATE) AS EFFFROMDATE FROM D001118 WHERE EFFFROMDATE <= TRUNC(SYSDATE-1) GROUP BY LBRCODE,PRDACCTID;

--CREATE TABLE TOFFSET AS 
--SELECT J.LBRCODE,J.PRDACCTID,J.EFFFROMDATE,J.SRNO,J.SLABAMT,J.OFFSET FROM D001118 J,TOFFSETW A WHERE  J.LBRCODE = A.LBRCODE AND J.PRDACCTID = A.PRDACCTID AND J.EFFFROMDATE = A.EFFFROMDATE   ORDER BY  J.LBRCODE,J.PRDACCTID,J.SRNO;

--CREATE TABLE XINTRATEMASTER AS
--SELECT LBRCODE,PRDCD,PRDACCTID,EFFFROMDATE AS LIMEFFFROMDATE ,PLR FROM LNMAS;

--CREATE TABLE XOFFSETMASTER AS 
--SELECT XINTRATEMASTER.*,TOFFSET.EFFFROMDATE,TOFFSET.SRNO,TOFFSET.SLABAMT,TOFFSET.OFFSET
--FROM XINTRATEMASTER,TOFFSET  WHERE XINTRATEMASTER.LBRCODE = TOFFSET.LBRCODE  AND XINTRATEMASTER.PRDACCTID = TOFFSET.PRDACCTID;

--CREATE TABLE TESTDB.INTTABLE AS
--SELECT K.PRDCD, K.INTEFFDT, K.SRNO, K.TOAMT, K.INTRATE  FROM D001116 K ORDER BY   K.PRDCD, K.INTEFFDT, K.SRNO, K.TOAMT, K.INTRATE;

--CREATE TABLE TESTDB.INTTABLE1 AS SELECT PRDCD,INTEFFDT FROM INTTABLE WHERE SRNO = 1 ORDER BY PRDCD,INTEFFDT;
--ALTER TABLE INTTABLE ADD FRAMT FLOAT; 
--UPDATE INTTABLE SET FRAMT = 0 WHERE SRNO = 1;

--UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 1)       WHERE INTTABLE.SRNO = 2;  
--UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 2)       WHERE INTTABLE.SRNO = 3;
--UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 3)       WHERE INTTABLE.SRNO = 4; 
--UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 4)       WHERE INTTABLE.SRNO = 5;
--UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 5)       WHERE INTTABLE.SRNO = 6; 
--UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 6)       WHERE INTTABLE.SRNO = 7;
--UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 7)       WHERE INTTABLE.SRNO = 8;
--UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 8)       WHERE INTTABLE.SRNO = 9;
--UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 9)       WHERE INTTABLE.SRNO = 10; 
--UPDATE INTTABLE SET FRAMT = FRAMT + 1 WHERE FRAMT <> 0 AND PRDCD LIKE 'FDR%';
--UPDATE INTTABLE SET FRAMT = FRAMT + 1 WHERE FRAMT <> 0;

--COMMIT;

--ALTER TABLE XOFFSETMASTER ADD ODATE DATE;
--UPDATE XOFFSETMASTER SET ODATE =  (SELECT  MAX(A.INTEFFDT) FROM INTTABLE1 A WHERE  A.PRDCD = RTRIM(SUBSTR(XOFFSETMASTER.PRDACCTID,1,8))) WHERE XOFFSETMASTER.PLR = 'Y';
--COMMIT;
--UPDATE XOFFSETMASTER SET ODATE =  (SELECT  MAX(A.INTEFFDT) FROM INTTABLE1 A WHERE  A.PRDCD = RTRIM(SUBSTR(XOFFSETMASTER.PRDACCTID,1,8)) AND A.INTEFFDT <= XOFFSETMASTER.LIMEFFFROMDATE  GROUP BY A.PRDCD) WHERE XOFFSETMASTER.PLR = 'N' ;
--COMMIT;
--ALTER TABLE XOFFSETMASTER ADD FINALRATE NUMBER(6,2);  


--CREATE TABLE OFFSET AS
--SELECT XOFFSETMASTER.*,INTTABLE.INTRATE FROM INTTABLE INNER JOIN XOFFSETMASTER ON RTRIM(SUBSTR(XOFFSETMASTER.PRDACCTID,1,8)) = INTTABLE.PRDCD AND XOFFSETMASTER.ODATE= INTTABLE.INTEFFDT AND XOFFSETMASTER.SLABAMT BETWEEN INTTABLE.FRAMT AND  INTTABLE.TOAMT ORDER BY LBRCODE,PRDACCTID,XOFFSETMASTER.SRNO;
--UPDATE OFFSET SET FINALRATE = INTRATE + OFFSET;     
--COMMIT;

------------------------NEW QUERY FOR INTRATE-----------------------

DROP TABLE TESTDB.TOFFSETW;
CREATE TABLE TOFFSETW AS
SELECT LBRCODE,PRDACCTID,MAX(EFFFROMDATE) AS EFFFROMDATE FROM D001118 WHERE EFFFROMDATE <= TRUNC(SYSDATE-1) GROUP BY LBRCODE,PRDACCTID;

------TOFFSETCHE---FOR OFFSET

DROP TABLE TESTDB.TOFFSET;
CREATE TABLE TOFFSET AS 
SELECT J.LBRCODE,J.PRDACCTID,J.EFFFROMDATE,J.SRNO,J.SLABAMT,J.OFFSET FROM D001118 J,TOFFSETW A 
WHERE  J.LBRCODE = A.LBRCODE AND J.PRDACCTID = A.PRDACCTID AND J.EFFFROMDATE = A.EFFFROMDATE   
ORDER BY  J.LBRCODE,J.PRDACCTID,J.SRNO;

--CHANGED(SANCLIMIT,MODULE ADDED)

DROP TABLE TESTDB.XINTRATEMASTER;
CREATE TABLE XINTRATEMASTER AS
SELECT LBRCODE,PRDCD,PRDACCTID,EFFFROMDATE AS LIMEFFFROMDATE ,TOTSANCLIMIT,MODULETYPE,PLR FROM LNMAS;

DROP TABLE TESTDB.XOFFSETMASTER;
CREATE TABLE XOFFSETMASTER AS 
SELECT XINTRATEMASTER.*,TOFFSET.EFFFROMDATE,TOFFSET.SRNO,TOFFSET.SLABAMT,TOFFSET.OFFSET
FROM XINTRATEMASTER,TOFFSET  WHERE XINTRATEMASTER.LBRCODE = TOFFSET.LBRCODE  AND XINTRATEMASTER.PRDACCTID = TOFFSET.PRDACCTID;

---CHANGED
UPDATE XOFFSETMASTER SET SLABAMT = TOTSANCLIMIT WHERE MODULETYPE <> 13 ;
COMMIT;
------

CREATE TABLE INTTABLE AS
SELECT K.PRDCD, K.INTEFFDT, K.SRNO, K.TOAMT, K.INTRATE  FROM D001116 K ORDER BY   K.PRDCD, K.INTEFFDT, K.SRNO, K.TOAMT, K.INTRATE;

CREATE TABLE INTTABLE1 AS SELECT PRDCD,INTEFFDT FROM INTTABLE WHERE SRNO = 1 ORDER BY PRDCD,INTEFFDT;
ALTER TABLE INTTABLE ADD FRAMT FLOAT; 
UPDATE INTTABLE SET FRAMT = 0 WHERE SRNO = 1;

UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 1)       WHERE INTTABLE.SRNO = 2;  
UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 2)       WHERE INTTABLE.SRNO = 3;
UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 3)       WHERE INTTABLE.SRNO = 4; 
UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 4)       WHERE INTTABLE.SRNO = 5;
UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 5)       WHERE INTTABLE.SRNO = 6; 
UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 6)       WHERE INTTABLE.SRNO = 7;
UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 7)       WHERE INTTABLE.SRNO = 8;
UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 8)       WHERE INTTABLE.SRNO = 9;
UPDATE INTTABLE SET FRAMT = (SELECT TOAMT FROM INTTABLE A WHERE A.PRDCD = INTTABLE.PRDCD AND A.INTEFFDT = INTTABLE.INTEFFDT AND A.SRNO = 9)       WHERE INTTABLE.SRNO = 10; 
UPDATE INTTABLE SET FRAMT = FRAMT + 1 WHERE FRAMT <> 0 AND PRDCD LIKE 'FDR%';
UPDATE INTTABLE SET FRAMT = FRAMT + 1 WHERE FRAMT <> 0;

COMMIT;

ALTER TABLE XOFFSETMASTER ADD ODATE DATE;
UPDATE XOFFSETMASTER SET ODATE =  (SELECT  MAX(A.INTEFFDT) FROM INTTABLE1 A WHERE  A.PRDCD = RTRIM(SUBSTR(XOFFSETMASTER.PRDACCTID,1,8))) WHERE XOFFSETMASTER.PLR = 'Y';
COMMIT;
UPDATE XOFFSETMASTER SET ODATE =  (SELECT  MAX(A.INTEFFDT) FROM INTTABLE1 A WHERE  A.PRDCD = RTRIM(SUBSTR(XOFFSETMASTER.PRDACCTID,1,8)) AND A.INTEFFDT <= XOFFSETMASTER.LIMEFFFROMDATE  GROUP BY A.PRDCD) WHERE XOFFSETMASTER.PLR = 'N' ;
COMMIT;
ALTER TABLE XOFFSETMASTER ADD FINALRATE NUMBER(6,2);  

DROP TABLE OFFSET PURGE;
CREATE TABLE OFFSET AS
SELECT XOFFSETMASTER.*,INTTABLE.INTRATE FROM INTTABLE INNER JOIN XOFFSETMASTER ON RTRIM(SUBSTR(XOFFSETMASTER.PRDACCTID,1,8)) = INTTABLE.PRDCD AND XOFFSETMASTER.ODATE= INTTABLE.INTEFFDT AND XOFFSETMASTER.SLABAMT BETWEEN INTTABLE.FRAMT AND  INTTABLE.TOAMT ORDER BY LBRCODE,PRDACCTID,XOFFSETMASTER.SRNO;

UPDATE OFFSET SET FINALRATE = INTRATE + OFFSET;     
COMMIT;
------------------------------------------------------

UPDATE LNMAS SET OS = 0 WHERE OS IS NULL;
COMMIT;
UPDATE LNMAS SET ODINST = 0 WHERE ODINST IS NULL AND POVERDUE > 0;
COMMIT;
UPDATE LNMAS SET POVERDUE = (OS * (-1)) WHERE (OS < 0) AND ((ACCTSTAT <> 3) OR (ACCTSTAT = 3 AND DATECLOSED > TRUNC(SYSDATE-1))) AND  (PRDCD LIKE 'ARB%' OR  PRDCD LIKE 'CF%' OR PRDCD LIKE 'SRO%' OR PRDCD LIKE 'NCF%' OR PRDCD LIKE 'WO%' OR PRDCD LIKE 'DRT%');
COMMIT;
UPDATE LNMAS SET OVERDUE = POVERDUE + IOVERDUE,DP = 0 WHERE (OS < 0) AND ((ACCTSTAT <> 3) OR (ACCTSTAT = 3 AND DATECLOSED > TRUNC(SYSDATE-1))) AND (PRDCD LIKE 'ARB%' OR  PRDCD LIKE 'CF%' OR PRDCD LIKE 'SRO%' OR PRDCD LIKE 'NCF%' OR PRDCD LIKE 'WO%' OR PRDCD LIKE 'DRT%');
COMMIT;

DROP TABLE TESTDB.LNSURMAS PURGE;
CREATE TABLE TESTDB.LNSURMAS AS 
SELECT LBRCODE,PRDACCTID,LNEESRTY,SRNO,LNSRTITLE,LNSRNAME,LNSRADD1,LNSRADD2,LNSRADD3,LNSRCITYCD,LNSRPINCD,              
       LNSRTELNO,LNSRDOB,LNSRMEMNO,LNSRBNKBRNAME,LNSRACCTID,EMPPROFCD,EMPNO,YRSOFSER,EMPTITLE,EMPNAME,EMPDESGN,               
       EMPADD1,EMPADD2,EMPADD3,EMPCITYCD,EMPPINCD,EMPTEL,EMPMONINC,GUARWORTH,GUARDT,LNSRMEMBERTYPE,STATUS,LONSRTYAGE,            
       CUSTNO,LNSRREFNO,LNSRBRCODE,LNSRBNKACNO,EMPNOS,TIEUPYN,EMPLOYERCD
       FROM ACBL.D030013@MISPROD  ORDER BY LBRCODE,PRDACCTID;

DROP TABLE TESTDB.TCHKMAS PURGE;
CREATE TABLE TESTDB.TCHKMAS AS 
SELECT     B.LBRCODE, B.PRDCD, B.NAME, B.MODULETYPE, B.ASSETLIAB,C.PRDACCTID, C.NAMETITLE, C.LONGNAME, 
                      C.DATEOPEN, C.DATECLOSED, C.ACCTTYPE, C.ACCTSTAT, C.MINORTYPE, C.INTOFFSET, C.FREEZETYPE, 
                      C.FRZREASONCD, C.CUSTNO
FROM         D009021 B INNER JOIN
                      ACBL.D009022@MISPROD C ON B.LBRCODE = C.LBRCODE AND B.PRDCD = RTRIM(SUBSTR(C.PRDACCTID, 1, 8))
WHERE     (B.MODULETYPE IN (11, 12)) AND (C.ACCTSTAT <> 3) OR
          (B.MODULETYPE IN (11, 12)) AND (C.ACCTSTAT = 3) AND (C.DATECLOSED > TRUNC(SYSDATE-1)) ;

ALTER TABLE TCHKMAS ADD BRNAME VARCHAR(30);
UPDATE TCHKMAS SET BRNAME = (SELECT NAME FROM D001003 G WHERE TCHKMAS.LBRCODE = G.PBRCODE);
COMMIT;

CREATE INDEX TCHKMAS_LBRPRDACCT_IDX ON TCHKMAS(LBRCODE,PRDACCTID);

DROP TABLE TESTDB.CHKMAS PURGE;
CREATE TABLE TESTDB.CHKMAS AS 
SELECT  TCHKMAS.*,F.CBLDATE, F.BALANCE1, F.BALANCE2, F.BALANCE3, F.BALANCE4, F.BALANCE5, F.BALANCE6, 
                      F.BALANCE7, F.BALANCE8, F.BALANCE9, F.BALANCE10, F.BALANCE11, F.BALANCE12, F.BALANCE13, 
                      F.BALANCE14, F.BALANCE15
FROM         ACBL.D010014@MISPROD F INNER JOIN
                      CBLMAS ON F.LBRCODE = CBLMAS.LBRCODE AND F.PRDACCTID = CBLMAS.PRDACCTID AND 
                      F.CBLDATE = CBLMAS.CBDATE RIGHT OUTER JOIN
                      TCHKMAS ON CBLMAS.LBRCODE = TCHKMAS.LBRCODE AND CBLMAS.PRDACCTID = TCHKMAS.PRDACCTID;

UPDATE CHKMAS SET BALANCE4 = BALANCE4 * 62 WHERE RTRIM(SUBSTR(PRDACCTID,1,8)) IN ('EEFCCDUS');
UPDATE CHKMAS SET BALANCE4 = BALANCE4 * 62 WHERE RTRIM(SUBSTR(PRDACCTID,1,8)) IN ('RFCSBUS'); 
COMMIT;

ALTER TABLE CHKMAS ADD SRLNO NUMBER;
ALTER TABLE CHKMAS ADD DESC1 VARCHAR2(50);

/* THIS CODE IS ADDED FOR ACCTYPEDESC UPDATE IN CHKMAS FOR BI BY ASHITA ON 20-JUN-2013 */

ALTER TABLE CHKMAS ADD ACCTTYPEDESC VARCHAR(40);
COMMIT;
UPDATE CHKMAS SET ACCTTYPEDESC = (SELECT CODEDESC FROM ACBL.D001002@MISPROD G WHERE G.CODETYPE = 1067 AND CHKMAS.ACCTTYPE = G.CODE);
COMMIT;
UPDATE CHKMAS SET ACCTTYPEDESC = '0' WHERE ACCTTYPEDESC IS NULL;
COMMIT;
/*  UP TO THIS */

DROP TABLE TESTDB.CUSMAS PURGE;
CREATE TABLE TESTDB.CUSMAS AS
SELECT     L.CUSTNO, L.NAMETITLE, L.LONGNAME, L.ADD1, L.ADD2, L.ADD3, L.CITYCD, L.PINCODE, 
                      L.PHONE, L.FAX, L.PAGERNO, L.LBRCODE, L.TDSPERCENTAGE, L.PANNO, L.PANNODESC, 
                      L.TDSYN, L.TDSREASONCD, L.TDSFRM15SUBDT, L.EMAILID, M.DOB, M.DTFROMCUST, M.RESIDENCE, 
                      M.CUSTYPE, M.MARITALSTATUS, M.NOOFCHILDREN, M.ANNUALINCOME, M.PANNO AS PANNO1, M.EDUCATIONALQUAL, 
                      M.PROFCD, M.DESIGNATION, M.OPHONE, M.PHBANKING, M.PWDASSIGNED, M.ATMNO, M.VALIDUPTO, 
                      M.DESMAIL, M.FREQST, M.DECISION, M.DOCUMENTS, M.DOCUMENTSDET, M.INTRCUSTNO, M.BANK1, 
                      M.BANK2, M.BR1, M.BR2, M.CREDITCARDS1, M.CREDITCARDS2, M.VALID1, M.VALID2, M.DEBITCARD, 
                      M.CREDITCARD, M.RELIGIONCD, M.EMPLOYEENO, M.PASSPORT, M.EMPNAMETITLE, M.EMPLONGNAME, 
                      M.EMPADDR1, M.EMPADDR2, M.EMPADDR3, M.NOOFSERVICE, M.EMPLOYEDWITH, M.CASTECODE, 
                      M.ASSETCODE, M.OTHERBRACCTCODE1, M.OTHERBRACCTCODE2, M.MEMBERNO, M.SEXCODE, M.MEMBERTYPE
FROM         ACBL.D009011@MISPROD L LEFT OUTER JOIN ACBL.D009012@MISPROD M ON L.CUSTNO = M.CUSTNO;

ALTER TABLE CUSMAS ADD BRNAME VARCHAR(30);

UPDATE CUSMAS SET BRNAME = (SELECT NAME FROM D001003 G WHERE CUSMAS.LBRCODE = G.PBRCODE);

COMMIT;

CREATE INDEX CUSMAS_CUSTNO_IDX ON CUSMAS(CUSTNO);
-------UPDATED ON 03-02-2015 AS CURCD IS ADDED IN GLMAS -------

CREATE TABLE TESTDB.GLMAS AS
SELECT F.LBRCODE, F.PRDACCTID, F.CBLDATE, F.BALANCE4,C.CURCD
FROM CBLMAS  A INNER JOIN ACBL.D010014@MISPROD F ON A.LBRCODE = F.LBRCODE AND A.PRDACCTID = F.PRDACCTID AND A.CBDATE = F.CBLDATE
LEFT OUTER JOIN ACBL.D009021@MISPROD C ON (F.LBRCODE = C.LBRCODE AND RTRIM(SUBSTR(F.PRDACCTID,1,8)) = TRIM(C.PRDCD))
WHERE (SUBSTR(A.PRDACCTID, 9, 32) = '000000000000000000000000') AND (F.BALANCE4 <> 0);

----ASHITA 03-02-2015 TAKING RATE MASTER DETAILS-----
---CREATE TABLE MAXCURCDASK AS SELECT CURCODE,MAX(RTDATE) AS RTDATE FROM ACBL.D001023@MISPROD GROUP BY CURCODE ORDER BY CURCODE;
---CREATE TABLE FRXCURRATEASK AS  SELECT A.CURCODE,A.RTDATE,B.TTBUYRATE FROM MAXCURCDASK A INNER JOIN ACBL.D001023@MISPROD B ON (A.CURCODE = B.CURCODE AND A.RTDATE = B.RTDATE) WHERE A.CURCODE <> 'INR' ORDER BY A.CURCODE;
---COMMIT;
----TUSHAR 08-04-2019 TAKING RATE MASTER DETAILS---------------------
CREATE TABLE FRXCURRATETSG AS
SELECT A.CURCODE,A.RTDATE,A.TTBUYRATE FROM ACBL.D001023@MISPROD A  WHERE A.RTDATE=(SELECT MAX(RTDATE) FROM ACBL.D001023@MISPROD WHERE CURCODE=A.CURCODE AND RTDATE <= TRUNC(SYSDATE-1)) ;
COMMIT;

-------CURCD OTHER THAN INR IS UPDATED GLOBALLY IN GLMAS ON 03-02-2015-------------------------
UPDATE GLMAS SET BALANCE4 = BALANCE4 * (SELECT FRXCURRATETSG.TTBUYRATE FROM FRXCURRATETSG WHERE GLMAS.CURCD = FRXCURRATETSG.CURCODE) WHERE GLMAS.CURCD <> 'INR';
COMMIT;

ALTER TABLE GLMAS ADD BRNAME VARCHAR(30);
UPDATE GLMAS SET BRNAME = (SELECT NAME FROM ACBL.D001003@MISPROD G WHERE GLMAS.LBRCODE = G.PBRCODE);
COMMIT;
CREATE TABLE TESTDB.SECTEMP AS SELECT LBRCODE,PRDACCTID,SECURITYTYPE,SRNO,MAINSECUCD,SUBSECUCD,SECSTAT,VALUATNDATE, RELEASEDATE,SECHOLDDATE  FROM ACBL.D030031@MISPROD; 
ALTER TABLE SECTEMP ADD LKPMAIN NUMERIC;
ALTER TABLE SECTEMP ADD LKPSUB NUMERIC;
UPDATE SECTEMP SET LKPMAIN =  10000; 
UPDATE SECTEMP SET LKPSUB =  MAINSECUCD + 10000;
ALTER TABLE SECTEMP ADD BRNAME VARCHAR(30);
COMMIT;

UPDATE SECTEMP SET BRNAME = (SELECT NAME FROM ACBL.D001003@MISPROD G WHERE SECTEMP.LBRCODE = G.PBRCODE);

COMMIT;

CREATE TABLE TESTDB.SECTEMP1 AS SELECT SECTEMP.*,Y.CODEDESC AS MAINSECDESC FROM SECTEMP LEFT OUTER JOIN ACBL.D001107@MISPROD Y ON SECTEMP.LKPMAIN = Y.CODETYPE AND SECTEMP.MAINSECUCD = Y.CODE; 

CREATE TABLE TESTDB.SECMAS AS SELECT  SECTEMP1.*,Y.CODEDESC AS SUBSECDESC FROM  SECTEMP1 LEFT OUTER JOIN  ACBL.D001107@MISPROD Y ON SECTEMP1.LKPSUB = Y.CODETYPE AND SECTEMP1.SUBSECUCD = Y.CODE;


CREATE TABLE TESTDB.SECDET AS 
SELECT SECMAS.*,
N.LBRCODE AS LLBRCODE,N.NAMETITLE AS LNAMETITLE,N.LONGNAME AS LLONGNAME,N.ISSAUTH,N.BRCODE,N.POLICYTYPE,     
N.POLICYNO,N.TERMTBL,N.ASSUREDSUM,N.COMNDATE,N.ENCASHDATE AS LENCASHDATE,N.PAYMODE,N.PREMAMT,N.TOTPREMPD,N.MATDATE,        
N.ANNUDATE,N.REFUNDAMT,N.ASSIGNYN,N.ELIGVAL,N.REMARKS,N.ASSIGNRECVDT,N.ASSIGNSENTDT,N.SURRENDERVAL,   
O.LBRCODE AS MLBRCODE,O.NAMETITLE AS MNAMETITLE,O.LONGNAME AS MLONGNAME,O.MAKE,O.MCSRNO,O.MODELNO,O.YEARMFR,                
O.EXPIRYDATE,O.ENCASHDATE AS MENCASHDATE,O.DESC1,O.DESC2,O.HYPTHTOBNK,O.IMPORTYN,O.COST,O.MARGIN,O.ELIGVAL AS MELIGVAL,O.REMARKS AS MREMARKS,                
O.SECTYPE,O.ROCYN,
P.LBRCODE AS FLBRCODE,P.NAMETITLE AS FNAMETITLE,P.LONGNAME AS FLONGNAME,P.ADDR1,P.ADDR2,P.ADDR3,P.CITYCD,         
P.PINCD,P.BLDAGE,P.BLDAREA,P.PURCDATE,P.PURCCOST,P.MKTVAL,P.REGDATE,P.MARGIN AS FMARGIN,P.ELIGVAL AS FELIGVAL,P.MORTDATE,       
P.EXPIRYDATE AS FEXPIRYDATE,P.ENCASHDATE AS FENCASHDATE,P.PREMAMT AS FPREMAMT,P.NOCOTHER,P.NOCDATE,P.LIENDATE,P.SURVEYNO,P.PLOTNO,P.LOCATION,P.REMARKS AS FREMARKS,        
P.SECTYPE AS FSECTYPE,P.RECORDDT,P.MORTGAGETYPE,P.SHARECERTNO,P.VALNAME,P.VALDATE,P.VALAMT,P.ADVNAME,P.FILEDATE,P.OPINIONDATE,    
Q.LBRCODE AS SLBRCODE,Q.STKBKDEBT,Q.GOODSTYPE,Q.TOTVALUE,Q.ABSSTKBKDEBT,Q.ACTUALVAL,Q.MARGIN AS SMARGIN,                 
Q.EXPIRYDATE AS SEXPIRYDATE,Q.ENCASHDATE AS SENCASHDATE,Q.ELIGVAL AS SELIGVAL,Q.REMARKS AS SREMARKS,Q.STKBKDBT,
R.LBRCODE AS NLBRCODE,R.NAMETITLE AS NNAMETITLE,R.LONGNAME AS NLONGNAME,R.SHRLIST,R.CERTNO,R.ISSCOBRN,R.NOOFUNITS,      
R.ISSDATE,R.MATDATE AS NMATDATE,R.ENCASHDATE AS NENCASHDATE,R.FACEVAL,R.MKTVAL AS NMKTVAL,R.SHRCURRT,R.PRSNTVAL,R.MATVAL,R.MARGIN AS NMARGIN,R.ELIGVAL AS NELIGVAL,R.ENCASHREPL,     
R.REMARKS AS NREMARKS,R.SECTYPE AS NSECTYPE,R.FOLIONO,R.BRANCH,R.FDRACCTID,R.FDRINTRATE,R.ACCRDINTRATE,R.CERTDISTFROMNO,R.CERTDISTTONO,R.TOTSHAREAMT,            
R.CLEARANCEDETAIL,R.DEMATACCTNO,R.DPID,R.DPNAME,
S.LBRCODE AS ILBRCODE,S.POLREFNO,S.INSAMT,S.STARTDT,S.INSEXPDT,S.ENCASHDATE AS ILENCASHDATE,S.PREMAMT AS IPREMAMT,        
S.POLSTATUS,S.POLCLSDT,S.INSDESC,S.INSCO,S.LICENDORCEDYN,S.ASSIGNRECVDT AS IASSIGNRECVDT,S.ASSIGNSENTDT AS IASSIGNSENTDT,   
T.LBRCODE AS VLBRCODE,T.VEHTYPE,T.VEHSTATENO,T.VEHRTONO,T.VEHNO,T.CHASISNO,T.ENGINENO,T.CAPACITY,               
T.HRSPWR,T.RCBOOKNO,T.PURCDATE AS VPURCDATE,T.MATDATE AS VMATDATE,T.HYPTHDATE,T.EXPIRYDATE AS VEXPIRYDATE,T.ENCASHDATE AS VLENCASHDATE,T.COST AS VCOST,T.MARGIN AS VMARGIN,T.ELIGVAL AS VELIGVAL,T.REMARKS AS VREMARKS,
T.MAKENO,T.YROFMAKE,T.MODELNO AS VMODELNO,T.DUPKEYYN,T.RESIDEPROOFYN,T.TAXDUEDT,T.HPCHANGEREQ,T.ROCCHANGEREQ,T.VEHSTATUS,T.REGSTRNO,
T.REGSTRPLACE,T.KEYNUMBER,T.TCBOOKYN,T.FORM2930RECVYN,T.TRANSLETTERYN  
FROM         SECMAS LEFT OUTER JOIN
                      ACBL.D030025@MISPROD N ON SECMAS.LBRCODE = N.LBRCODE AND SECMAS.PRDACCTID = N.PRDACCTID AND 
                      SECMAS.SECURITYTYPE = N.SECURITYTYPE AND SECMAS.SRNO = N.SRNO LEFT OUTER JOIN
                      ACBL.D030026@MISPROD O ON SECMAS.LBRCODE = O.LBRCODE AND SECMAS.PRDACCTID = O.PRDACCTID AND 
                      SECMAS.SECURITYTYPE = O.SECURITYTYPE AND SECMAS.SRNO = O.SRNO LEFT OUTER JOIN
                      ACBL.D030027@MISPROD P ON SECMAS.LBRCODE = P.LBRCODE AND SECMAS.PRDACCTID = P.PRDACCTID AND 
                      SECMAS.SECURITYTYPE = P.SECURITYTYPE AND SECMAS.SRNO = P.SRNO LEFT OUTER JOIN
                      ACBL.D030028@MISPROD Q ON SECMAS.LBRCODE = Q.LBRCODE AND SECMAS.PRDACCTID = Q.PRDACCTID AND 
                      SECMAS.SECURITYTYPE = Q.SECURITYTYPE AND SECMAS.SRNO = Q.SRNO LEFT OUTER JOIN
                      ACBL.D030029@MISPROD R ON SECMAS.LBRCODE = R.LBRCODE AND SECMAS.PRDACCTID = R.PRDACCTID AND 
                      SECMAS.SECURITYTYPE = R.SECURITYTYPE AND SECMAS.SRNO = R.SRNO LEFT OUTER JOIN
                      ACBL.D030030@MISPROD S ON SECMAS.LBRCODE = S.LBRCODE AND SECMAS.PRDACCTID = S.PRDACCTID AND 
                      SECMAS.SECURITYTYPE = S.SECURITYTYPE AND SECMAS.SRNO = S.SRNO LEFT OUTER JOIN
                      ACBL.D030032@MISPROD T ON SECMAS.LBRCODE = T.LBRCODE AND SECMAS.PRDACCTID = T.PRDACCTID AND 
                      SECMAS.SECURITYTYPE = T.SECURITYTYPE AND SECMAS.SRNO = T.SRNO
ORDER BY SECMAS.LBRCODE,SECMAS.PRDACCTID,SECMAS.SECURITYTYPE DESC,SECMAS.SRNO;

ALTER TABLE SECDET ADD STKBK VARCHAR2(35);
ALTER TABLE SECDET ADD GOODS VARCHAR2(35);
ALTER TABLE SECDET ADD INVEST VARCHAR2(35);
ALTER TABLE SECDET ADD MACH VARCHAR2(35);
ALTER TABLE SECDET ADD VEH VARCHAR2(35);
ALTER TABLE SECDET ADD PROP VARCHAR2(35);
ALTER TABLE SECDET ADD SITY VARCHAR2(35);
ALTER TABLE SECDET ADD LICBR VARCHAR2(35);
ALTER TABLE SECDET ADD PAYMOD VARCHAR2(35);
ALTER TABLE SECDET ADD INSCOMP VARCHAR2(35);
         
UPDATE SECDET SET STKBK =  (SELECT U.CODEDESC FROM ACBL.D001002@MISPROD U WHERE U.CODETYPE = 30100  AND U.CODE = SECDET.STKBKDBT);        
UPDATE SECDET SET GOODS =  (SELECT U.CODEDESC FROM ACBL.D001002@MISPROD U WHERE U.CODETYPE = 300067 AND U.CODE = SECDET.GOODSTYPE);
UPDATE SECDET SET INVEST = (SELECT U.CODEDESC FROM ACBL.D001002@MISPROD U WHERE U.CODETYPE = 30103  AND U.CODE = SECDET.NSECTYPE); 
UPDATE SECDET SET MACH =   (SELECT U.CODEDESC FROM ACBL.D001002@MISPROD U WHERE U.CODETYPE = 30102  AND U.CODE = SECDET.SECTYPE);
UPDATE SECDET SET VEH =    (SELECT U.CODEDESC FROM ACBL.D001002@MISPROD U WHERE U.CODETYPE = 30020  AND U.CODE = RTRIM(SECDET.VEHTYPE));
UPDATE SECDET SET PROP =   (SELECT U.CODEDESC FROM ACBL.D001002@MISPROD U WHERE U.CODETYPE = 30101  AND U.CODE = SECDET.FSECTYPE);
UPDATE SECDET SET SITY =   (SELECT U.CODEDESC FROM ACBL.D001002@MISPROD U WHERE U.CODETYPE = 1028   AND U.CODE = SECDET.CITYCD);
UPDATE SECDET SET LICBR =  (SELECT U.CODEDESC FROM ACBL.D001002@MISPROD U WHERE U.CODETYPE = 300001 AND U.CODE = SECDET.BRCODE);
UPDATE SECDET SET PAYMOD = (SELECT U.CODEDESC FROM ACBL.D001002@MISPROD U WHERE U.CODETYPE = 30001  AND U.CODE = SECDET.PAYMODE);
UPDATE SECDET SET INSCOMP =(SELECT U.CODEDESC FROM ACBL.D001002@MISPROD U WHERE U.CODETYPE = 1129   AND U.CODE = SECDET.INSCO);

COMMIT;

CREATE TABLE TESTDB.TDMAIN AS 
SELECT     B.LBRCODE, B.PRDCD, B.NAME, B.MODULETYPE, B.CURCD, B.MULTICURYN, 
                      V.INTFREQ, V.CUMINTYN, V.INSTORPRINC, V.INTCRACCTID,C.PRDACCTID,C.NAMETITLE,
                      C.LONGNAME, C.ACCTTYPE, C.INTOFFSET, C.CUSTNO,  L.TDSYN, L.TDSREASONCD,
                      L.TDSFRM15SUBDT, V.MTDPRDACCTID
FROM       ACBL.D009021@MISPROD B INNER JOIN
                      ACBL.D020002@MISPROD V ON B.LBRCODE = V.LBRCODE AND B.PRDCD = V.PRDCD INNER JOIN
                      ACBL.D009022@MISPROD C ON V.LBRCODE = C.LBRCODE AND V.PRDCD = RTRIM(SUBSTR(C.PRDACCTID, 1, 8)) INNER JOIN
                      ACBL.D009011@MISPROD  L ON C.CUSTNO = L.CUSTNO 
WHERE     (B.MODULETYPE = 20) 
ORDER BY C.LBRCODE, C.PRDACCTID;

ALTER TABLE TDMAIN ADD BRNAME VARCHAR(30);
UPDATE TDMAIN SET BRNAME = (SELECT NAME FROM ACBL.D001003@MISPROD G WHERE TDMAIN.LBRCODE = G.PBRCODE);
DROP TABLE TDREC_TMP;
CREATE TABLE TDREC_TMP AS
SELECT LBRCODE, PRDACCTID, 999 AS SRNO, CURCD, OFFSETRATE, CERTDATE, ASOFFDATE, NOINST, NOOFMONTHS, NOOFDAYS, INTRATE, INSTORPRINCAMT, MATVAL, 
MATDATE, TOTALLIEN, RECEIPTSTATUS, TRFRACCTID, MONTHSDELAY, CLOSEDDATE, MAINBALFCY, INTPRVDAMTFCY, INTPAIDAMTFCY, TDSAMTFCY, TDSYN, TDSREASONCD,CLINTRATE, REMARKS
FROM ACBL.D020004@MISPROD
UNION ALL
SELECT LBRCODE, PRDACCTID, SRNO, CURCD, OFFSETRATE, CERTDATE, ASOFFDATE, 0 AS NOINST, NOOFMONTHS, NOOFDAYS, INTRATE, INSTORPRINCAMT, MATVAL, 
MATDATE, TOTALLIEN, RECEIPTSTATUS, TRFRACCTID, MONTHSDELAY, CLOSEDDATE, MAINBALFCY, INTPRVDAMTFCY, INTPAIDAMTFCY, TDSAMTFCY, ' ' AS TDSYN, 0 AS TDSREASONCD, CLINTRATE, REMARKS
FROM ACBL.D020104@MISPROD  ORDER BY LBRCODE, PRDACCTID;

DROP TABLE TDREC_TMP1;
CREATE TABLE TDREC_TMP1 AS SELECT A.*,B.NAMETITLE, B.LONGNAME FROM TDREC_TMP A LEFT OUTER JOIN ACBL.D020004@MISPROD B ON A.LBRCODE = B.LBRCODE AND A.PRDACCTID = B.PRDACCTID ORDER BY A.LBRCODE, A.PRDACCTID;

DROP TABLE TDREC_TMP;

DROP TABLE TDREC_NEW;
CREATE TABLE TDREC_NEW AS
SELECT Y.LBRCODE, Y.PRDACCTID, Y.NAMETITLE, Y.LONGNAME, Y.CURCD, Y.OFFSETRATE, Y.CERTDATE, Y.ASOFFDATE, Y.NOINST, Y.NOOFMONTHS, Y.NOOFDAYS, Y.INTRATE, Y.INSTORPRINCAMT, Y.MATVAL, 
Y.MATDATE, Y.TOTALLIEN, Y.RECEIPTSTATUS, Y.TRFRACCTID, Y.MONTHSDELAY, Y.CLOSEDDATE, Y.MAINBALFCY, Y.INTPRVDAMTFCY, Y.INTPAIDAMTFCY, Y.TDSAMTFCY, Y.TDSYN, Y.TDSREASONCD,Y.CLINTRATE, Y.REMARKS
FROM (SELECT LBRCODE, PRDACCTID, MAX(SRNO) SRNO, MAX(CERTDATE) AS CERTDATE FROM TDREC_TMP1 WHERE CERTDATE <= TRUNC(SYSDATE-1) GROUP BY LBRCODE, PRDACCTID ORDER BY LBRCODE, PRDACCTID) X
LEFT OUTER JOIN TDREC_TMP1 Y ON X.LBRCODE = Y.LBRCODE AND X.PRDACCTID = Y.PRDACCTID AND X.SRNO = Y.SRNO AND X.CERTDATE = Y.CERTDATE;

DROP TABLE TDRECT;

CREATE TABLE TESTDB.TDRECT AS 
SELECT     LBRCODE, PRDACCTID, NAMETITLE, LONGNAME, CURCD, OFFSETRATE, CERTDATE, ASOFFDATE, NOINST, NOOFMONTHS, NOOFDAYS, INTRATE, INSTORPRINCAMT, MATVAL, 
MATDATE, TOTALLIEN, RECEIPTSTATUS, TRFRACCTID, MONTHSDELAY, CLOSEDDATE, MAINBALFCY, INTPRVDAMTFCY, INTPAIDAMTFCY, TDSAMTFCY, TDSYN, TDSREASONCD FROM TDREC_NEW
WHERE   ((RECEIPTSTATUS IN(51,97)) AND CERTDATE <= TRUNC(SYSDATE-1)) OR ((RECEIPTSTATUS <> 51) AND (CLOSEDDATE > TRUNC(SYSDATE-1))  AND CERTDATE <= TRUNC(SYSDATE-1));

----- THIS CODE ADD BECAUSE ARS RECORD NOT ADDED IN TDRECT

CREATE TABLE TESTDB.TDRECT_ARS AS 
SELECT     LBRCODE, PRDACCTID, NAMETITLE, LONGNAME, CURCD, OFFSETRATE, CERTDATE, ASOFFDATE, NOINST, NOOFMONTHS, NOOFDAYS, INTRATE, INSTORPRINCAMT, MATVAL, 
                      MATDATE, TOTALLIEN, RECEIPTSTATUS, TRFRACCTID, MONTHSDELAY, CLOSEDDATE, MAINBALFCY, INTPRVDAMTFCY, INTPAIDAMTFCY, TDSAMTFCY, TDSYN, TDSREASONCD
FROM    ACBL.D020004@MISPROD
WHERE  ((RECEIPTSTATUS IN(51,97)) AND RTRIM(SUBSTR(PRDACCTID,1,8)) LIKE 'ARS%' ) OR ((RECEIPTSTATUS <> 51) AND (CLOSEDDATE > TRUNC(SYSDATE-1)) AND RTRIM(SUBSTR(PRDACCTID,1,8)) LIKE 'ARS%');

MERGE INTO TDRECT A USING TDRECT_ARS B ON (A.LBRCODE = B.LBRCODE AND A.PRDACCTID = B.PRDACCTID)  
WHEN NOT MATCHED
THEN INSERT
(A.LBRCODE,A.PRDACCTID,A.NAMETITLE,A.LONGNAME,A.CURCD,A.OFFSETRATE,A.CERTDATE,A.ASOFFDATE,A.NOINST,A.NOOFMONTHS,A.NOOFDAYS,A.INTRATE,A.INSTORPRINCAMT,A.MATVAL,A.MATDATE,A.TOTALLIEN,A.RECEIPTSTATUS,A.TRFRACCTID,A.MONTHSDELAY,A.CLOSEDDATE,A.MAINBALFCY,A.INTPRVDAMTFCY,A.INTPAIDAMTFCY,A.TDSAMTFCY,A.TDSYN,A.TDSREASONCD)
VALUES
(B.LBRCODE,B.PRDACCTID,B.NAMETITLE,B.LONGNAME,B.CURCD,B.OFFSETRATE,B.CERTDATE,B.ASOFFDATE,B.NOINST,B.NOOFMONTHS,B.NOOFDAYS,B.INTRATE,B.INSTORPRINCAMT,B.MATVAL,B.MATDATE,B.TOTALLIEN,B.RECEIPTSTATUS,B.TRFRACCTID,B.MONTHSDELAY,B.CLOSEDDATE,B.MAINBALFCY,B.INTPRVDAMTFCY,B.INTPAIDAMTFCY,B.TDSAMTFCY,B.TDSYN,B.TDSREASONCD);

DROP TABLE TDRECT_ARS;
----- ARS SEGMENT

ALTER TABLE TDRECT ADD BRNAME VARCHAR(30);
UPDATE TDRECT SET BRNAME = (SELECT NAME FROM ACBL.D001003@MISPROD G WHERE TDRECT.LBRCODE = G.PBRCODE);
COMMIT;
CREATE INDEX TDRECT_LBRPRDACCT_IDX ON TDRECT(LBRCODE,PRDACCTID);
CREATE TABLE TESTDB.TDRECT1 AS 
SELECT  TDRECT.*,F.CBLDATE, F.BALANCE1, F.BALANCE2, F.BALANCE3, F.BALANCE4, F.BALANCE5, F.BALANCE6, 
                      F.BALANCE7, F.BALANCE8, F.BALANCE9, F.BALANCE10, F.BALANCE11, F.BALANCE12, F.BALANCE13, 
                      F.BALANCE14, F.BALANCE15
FROM         ACBL.D010014@MISPROD F INNER JOIN
                      CBLMAS ON F.LBRCODE = CBLMAS.LBRCODE AND F.PRDACCTID = CBLMAS.PRDACCTID AND 
                      F.CBLDATE = CBLMAS.CBDATE RIGHT OUTER JOIN
                      TDRECT ON CBLMAS.LBRCODE = TDRECT.LBRCODE AND CBLMAS.PRDACCTID = TDRECT.PRDACCTID;

CREATE TABLE TESTDB.TDREC AS
SELECT TDMAIN.*,TDRECT1.LBRCODE AS RLBRCODE,TDRECT1.PRDACCTID AS RPRDACCTID,TDRECT1.NAMETITLE AS RNAMETITLE,TDRECT1.LONGNAME AS RLONGNAME,
TDRECT1.CURCD AS RCURCD,TDRECT1.OFFSETRATE,TDRECT1.CERTDATE,TDRECT1.ASOFFDATE,TDRECT1.NOINST,TDRECT1.NOOFMONTHS,TDRECT1.NOOFDAYS,TDRECT1.INTRATE,       
TDRECT1.INSTORPRINCAMT,TDRECT1.MATVAL,TDRECT1.MATDATE,TDRECT1.TOTALLIEN,TDRECT1.RECEIPTSTATUS,TDRECT1.TRFRACCTID,TDRECT1.MONTHSDELAY,    
TDRECT1.CLOSEDDATE,TDRECT1.MAINBALFCY,TDRECT1.INTPRVDAMTFCY,TDRECT1.INTPAIDAMTFCY,TDRECT1.TDSAMTFCY,TDRECT1.TDSYN AS RTDSYN,TDRECT1.TDSREASONCD AS RTDSREASONCD,    
TDRECT1.BRNAME AS RBRNAME,TDRECT1.CBLDATE,TDRECT1.BALANCE1,TDRECT1.BALANCE2,TDRECT1.BALANCE3,TDRECT1.BALANCE4,TDRECT1.BALANCE5,TDRECT1.BALANCE6,       
TDRECT1.BALANCE7,TDRECT1.BALANCE8,TDRECT1.BALANCE9,TDRECT1.BALANCE10,TDRECT1.BALANCE11,TDRECT1.BALANCE12,TDRECT1.BALANCE13,TDRECT1.BALANCE14,      
TDRECT1.BALANCE15      
FROM TDMAIN INNER JOIN TDRECT1 ON TDMAIN.LBRCODE = TDRECT1.LBRCODE AND
SUBSTR(TDMAIN.PRDACCTID,1,24) = SUBSTR(TDRECT1.PRDACCTID,1,24);

ALTER TABLE TDREC ADD FINALBAL  FLOAT DEFAULT 0;
CREATE INDEX TDREC_RLBRRPRDACCT_IDX ON TDREC(RLBRCODE,RPRDACCTID);

UPDATE TDREC SET   FINALBAL = (BALANCE1 + BALANCE2 - BALANCE3) - BALANCE4 WHERE (TDREC.INSTORPRINC = 'P') AND (TDREC.CUMINTYN = 'Y') AND ((TDREC.INTFREQ = 'Q') OR (TDREC.INTFREQ = 'H'));
COMMIT;

UPDATE TDREC SET FINALBAL = BALANCE1  WHERE FINALBAL = 0;
COMMIT;
-----CURCD OTHER THAN INR DATA IS UPDATED GLOBALLY ON 03-02-2015--------------
UPDATE TDREC SET FINALBAL = FINALBAL * (SELECT FRXCURRATETSG.TTBUYRATE FROM FRXCURRATETSG 
WHERE TDREC.CURCD = FRXCURRATETSG.CURCODE) 
WHERE TDREC.CURCD <> 'INR';
--UPDATE TDREC SET FINALBAL = FINALBAL * 61 WHERE CURCD <> 'INR';
COMMIT;
--UPDATE TDREC SET BALANCE4 = BALANCE4 * 79 WHERE RTRIM(SUBSTR(PRDACCTID,1,8)) IN ('FCHICEU');
--COMMIT;

ALTER TABLE TDREC ADD SRLNO NUMBER;
ALTER TABLE TDREC ADD DESC1 VARCHAR2(50);
COMMIT;
CREATE TABLE PLDEF AS SELECT * FROM D010064 WHERE LBRCODE = 1 AND PRNFORMATTYPE = 'WKW';

--------UPDATE PLDEF SET PRDCD = TRIM(PRDCD) WHERE PRDCD <> '        ';---------------------------CHANGE AS PER CD RATIO---------------------

UPDATE PLDEF SET PRDCD = TRIM(PRDCD) where SUBSTR(PRDCD,1,1) <> ' ';
-------CREATE TABLE MINUSPLUS AS SELECT (PRDCD) FROM PLDEF WHERE SORTCODE1 = 2 AND SORTCODE2 = 6 AND BOTHSIDEYN = 'Y' ;---------------------------CHANGE AS PER CD RATIO---------------------
-------CREATE TABLE MINUSPLUS AS SELECT TRIM(PRDCD) FROM PLDEF WHERE SORTCODE1 = 2 AND SORTCODE2 = 6 AND BOTHSIDEYN = 'Y' ;
CREATE TABLE MINUSPLUS AS SELECT TRIM(PRDCD)  AS PRDCD  FROM PLDEF WHERE SORTCODE1 = 2 AND SORTCODE2 = 6 AND BOTHSIDEYN = 'Y' ;

INSERT INTO PARAOFADV 
SELECT PLDEF.PRNFORMATTYPE,PLDEF.PRDCD,PLDEF.HEADING,PLDEF.SORTCODE1,PLDEF.SORTCODE2,PLDEF.SORTCODE3,
PLDEF.SORTCODE4,0,0,'NA',0,'NA',0,0,0,0 
FROM PLDEF LEFT OUTER JOIN PARAOFADV ON (TRIM(PLDEF.PRDCD) = TRIM(PARAOFADV.PRDCD))
WHERE  PLDEF.SORTCODE1 = 2 AND PLDEF.SORTCODE2 = 6 AND PLDEF.LBRCODE = 1 AND PLDEF.SORTCODE4 <> 0 AND PARAOFADV.PRDCD IS NULL  AND PLDEF.IMPLLEVEL = 'P';


INSERT INTO PARAOFTD
SELECT PLDEF.PRNFORMATTYPE,PLDEF.PRDCD,PLDEF.HEADING,PLDEF.SORTCODE1,PLDEF.SORTCODE2,PLDEF.SORTCODE3,PLDEF.SORTCODE4,0,0,0,0,0,0
FROM PLDEF LEFT OUTER JOIN PARAOFTD ON (TRIM(PLDEF.PRDCD) = TRIM(PARAOFTD.PRDCD))
WHERE  PLDEF.SORTCODE4 <> 0 AND 
                (((PLDEF.SORTCODE1 = 1) AND (PLDEF.SORTCODE2 = 3) AND (PLDEF.SORTCODE3 = 2)) OR
                        ((PLDEF.SORTCODE1 = 1) AND (PLDEF.SORTCODE2 = 3) AND (PLDEF.SORTCODE3 = 1)) OR
                        ((PLDEF.SORTCODE1 = 1) AND (PLDEF.SORTCODE2 = 4))) AND PARAOFTD.PRDCD IS NULL
                         AND PLDEF.IMPLLEVEL = 'P';

CREATE TABLE PLACCT AS
SELECT A.LBRCODE,A.PRDACCTID,A.LONGNAME,A.ACCTSTAT,A.INCLRGBALFCY,A.UNCLREFFFCY,A.SHDCLRBALFCY,A.SHDTOTBALFCY,
A.ACTCLRBALFCY,A.ACTTOTBALFCY,A.ACTTOTBALLCY
FROM ACBL.D009022@MISPROD A WHERE RTRIM(SUBSTR(PRDACCTID,1,8)) LIKE 'PL%' AND 
((A.ACCTSTAT <> 3) OR (A.ACCTSTAT = 3 AND A.DATECLOSED > TRUNC(SYSDATE-1))) 
ORDER BY LBRCODE,PRDACCTID;

CREATE TABLE PLMAS AS 
SELECT A.*,C.BALANCE4 FROM PLACCT A INNER JOIN CBLMAS B 
ON (A.LBRCODE = B.LBRCODE AND A.PRDACCTID = B.PRDACCTID) INNER JOIN ACBL.D010014@MISPROD C ON (B.LBRCODE = C.LBRCODE AND B.PRDACCTID = C.PRDACCTID 
AND B.CBDATE = C.CBLDATE) ORDER BY A.LBRCODE,A.PRDACCTID;

INSERT INTO PLPARA
SELECT A.LBRCODE,A.PRNFORMATTYPE,A.SORTCODE1,A.SORTCODE2,A.SORTCODE3,A.SORTCODE4,A.PRDCD,A.PLACCODE,A.HEADING,
A.FLOATYN,A.BOTHSIDEYN,0,0
FROM ACBL.D010015@MISPROD A LEFT OUTER JOIN PLPARA B ON (A.PLACCODE = B.PLACCODE)
WHERE  A.SORTCODE4 <> 0 AND A.PRNFORMATTYPE = 'PL' AND A.LBRCODE = 1 AND B.PLACCODE IS NULL;

CREATE TABLE INTRECPAY AS 
SELECT     B.LBRCODE, B.PRDCD, B.NAME, B.MODULETYPE, B.ASSETLIAB,C.PRDACCTID, C.NAMETITLE, C.LONGNAME, 
                      C.DATEOPEN, C.DATECLOSED, C.ACCTTYPE, C.ACCTSTAT, C.MINORTYPE, C.INTOFFSET, C.FREEZETYPE, 
                      C.FRZREASONCD, C.CUSTNO
FROM         ACBL.D009021@MISPROD B INNER JOIN
                      ACBL.D009022@MISPROD C ON B.LBRCODE = C.LBRCODE AND B.PRDCD = RTRIM(SUBSTR(C.PRDACCTID, 1, 8))
WHERE    ( (B.MODULETYPE IN (971,972)) AND (C.ACCTSTAT <> 3)) OR
          ((B.MODULETYPE IN (971,972)) AND (C.ACCTSTAT = 3) AND (C.DATECLOSED > TRUNC(SYSDATE-1))) ;
ALTER TABLE INTRECPAY ADD BRNAME VARCHAR(30);
UPDATE INTRECPAY SET BRNAME = (SELECT NAME FROM ACBL.D001003@MISPROD G WHERE INTRECPAY.LBRCODE = G.PBRCODE);
COMMIT;
CREATE INDEX INTRECPAY_LBRPRDCD_IDX ON INTRECPAY(LBRCODE,PRDCD);

CREATE TABLE TESTDB.INTRECPAYFIN AS 
SELECT  INTRECPAY.*,F.CBLDATE, F.BALANCE1, F.BALANCE2, F.BALANCE3, F.BALANCE4, F.BALANCE5, F.BALANCE6, 
                      F.BALANCE7, F.BALANCE8, F.BALANCE9, F.BALANCE10, F.BALANCE11, F.BALANCE12, F.BALANCE13, 
                      F.BALANCE14, F.BALANCE15
FROM         ACBL.D010014@MISPROD F INNER JOIN
                      CBLMAS ON F.LBRCODE = CBLMAS.LBRCODE AND F.PRDACCTID = CBLMAS.PRDACCTID AND 
                      F.CBLDATE = CBLMAS.CBDATE RIGHT OUTER JOIN
                      INTRECPAY ON CBLMAS.LBRCODE = INTRECPAY.LBRCODE AND CBLMAS.PRDACCTID = INTRECPAY.PRDACCTID;
COMMIT;
CREATE INDEX INTRECPAYFIN_LBRPRDACCT_IDX ON INTRECPAYFIN(LBRCODE,PRDACCTID);

ALTER TABLE INTRECPAYFIN ADD ACNO NUMBER;
commit;

UPDATE INTRECPAYFIN SET ACNO = CAST(SUBSTR(PrdAcctId,17,8)AS INTEGER);
commit;

UPDATE CHKMAS SET MODULETYPE = 12 WHERE MODULETYPE = 11 AND PRDCD = 'CUD';
COMMIT;
UPDATE CHKMAS SET BALANCE4 = 0 WHERE BALANCE4 IS NULL;
COMMIT;
UPDATE LNMAS SET DATECLOSED = LASTCRDATE WHERE ACCTSTAT = 3 AND DATECLOSED = '01-JAN-1900';
UPDATE LNMAS SET POVERDUE = (OS*-1), OVERDUE = (OS *-1) WHERE PRDCD IN ('FLC','IBG');

---THIS IS BECAUSE OF SOME ACCOUNTS STATUS IS OPEN EVEN THOUGH THAT BRANCH-64 IS CLOSED
UPDATE LNMAS SET ACCTSTAT = 3, DATECLOSED = '31-OCT-2011' WHERE LBRCODE = 64 AND ACCTSTAT <> 3;
-----------------------------
-- NEW LBD ADDED ON --29-08-2018

================================================================================================================================================================================================
OLD QUERY:-

--DROP TABLE LNMASTMP PURGE;
--CREATE TABLE LNMASTMP AS
--SELECT A.LBRCODE,A.PRDACCTID,
--B.INDOTH,C.CODEDESC AS INDOTHDESC,
--B.RELGTYPE,D.CODEDESC AS RELGTYPEDESC,
--B.BUSNTYPE AS NATUREOFBUSN,E.CODEDESC AS NATUREOFBUSNDESC,
--B.BUSNSUBTYPE AS TYPEOFINDPUR,F.CODEDESC AS TYPEOFINDPURDESC,
--B.SECCODE AS PRIMESEC,G.CODEDESC AS PRIMESECDESC,
--B.PURPCODECD AS SECTOR,H.CODEDESC AS SECTORDESC,
--B.CASTECODE,I.CODEDESC AS CASTECODEDESC,B.CATEGORYCD,J.CODEDESC AS CATEGORYCDDESC,B.MFGCOST,B.SERVCOST,
--B.LOANTYPE,K.CODEDESC AS LOANTYPEDESC,
--B.PRIORSECT,L.CODEDESC AS PRIORSECTDESC,
--B.WEAKRSECT,M.CODEDESC AS WEAKRSECTDESC,
--B.FUTUREPROV2 AS NATUREOFLOAN,N.CODEDESC AS NATUREOFLOANDESC,
--B.FUTUREPROV3, (SELECT CODEDESC FROM ACBL.D001002 WHERE CODETYPE = 30309 AND CODE = A.FUTUREPROV3) FUTUREPROV3_DESC,
--B.FUTUREPROV4  AS RESOLUTIONPLAN, (SELECT CODEDESC FROM ACBL.D001002 WHERE CODETYPE = 30310 AND CODE = A.FUTUREPROV4) ResolutionPlan_DESC,
--B.FUTUREPROV5, B.FUTUREPROV6  AS PURCHASECONSTRDWELLINGUNIT,
--B.ANNUALTRNOVER,B.EXPORTTRNOVER,B.ANNUALINCOME,B.AGRILANDHOLD
--FROM LNMAS A 
--LEFT OUTER JOIN ACBL.D030305@MISPROD B ON A.LBRCODE = B.LBRCODE AND A.PRDACCTID = B.PRDACCTID 
--LEFT OUTER JOIN ACBL.D001002@MISPROD C ON C.CODETYPE = 1060 AND B.INDOTH = CAST(C.CODE AS INTEGER) 
--LEFT OUTER JOIN ACBL.D001002@MISPROD D ON D.CODETYPE = 30311 AND B.RELGTYPE = CAST(D.CODE AS INTEGER) 
--LEFT OUTER JOIN ACBL.D001002@MISPROD E ON E.CODETYPE = 30305 AND B.BUSNTYPE  = CAST(E.CODE AS INTEGER) 
--LEFT OUTER JOIN ACBL.D001002@MISPROD F ON F.CODETYPE = 30306 AND B.BUSNSUBTYPE = CAST(F.CODE AS INTEGER) 
--LEFT OUTER JOIN ACBL.D001002@MISPROD G ON G.CODETYPE = 30304 AND B.SECCODE = CAST(G.CODE AS INTEGER) 
--LEFT OUTER JOIN ACBL.D001002@MISPROD H ON H.CODETYPE = 30303 AND B.PURPCODECD = CAST(H.CODE AS INTEGER) 
--LEFT OUTER JOIN ACBL.D001002@MISPROD I ON I.CODETYPE = 30302 AND B.CASTECODE = CAST(I.CODE AS INTEGER) 
--LEFT OUTER JOIN ACBL.D001002@MISPROD J ON J.CODETYPE = 30301 AND B.CATEGORYCD = CAST(J.CODE AS INTEGER) 
--LEFT OUTER JOIN ACBL.D001002@MISPROD K ON K.CODETYPE = 30312  AND B.LOANTYPE = CAST(K.CODE AS INTEGER) 
--LEFT OUTER JOIN ACBL.D001002@MISPROD L ON L.CODETYPE = 1002 AND B.PRIORSECT = L.CODE 
--LEFT OUTER JOIN ACBL.D001002@MISPROD M ON M.CODETYPE = 1002 AND B.WEAKRSECT  = M.CODE 
--LEFT OUTER JOIN ACBL.D001002@MISPROD N ON N.CODETYPE = 30308 AND B.FUTUREPROV2 = CAST(N.CODE AS INTEGER) ORDER BY A.LBRCODE, A.PRDACCTID
--LEFT OUTER JOIN ACBL.D001002@MISPROD O ON O.CODETYPE = 30309 AND B.FUTUREPROV3 = CAST(N.CODE AS INTEGER) ORDER BY A.LBRCODE, A.PRDACCTID
--LEFT OUTER JOIN ACBL.D001002@MISPROD P  ON P.CODETYPE = 30310 AND B.FUTUREPROV4 = CAST(N.CODE AS INTEGER) ORDER BY A.LBRCODE, A.PRDACCTID 
==============================================================================================================================================================================================================

DROP TABLE LNMASTMP PURGE;
CREATE TABLE LNMASTMP AS
SELECT A.LBRCODE,A.PRDACCTID,
B.INDOTH,C.CODEDESC AS INDOTHDESC,
B.RELGTYPE,D.CODEDESC AS RELGTYPEDESC,
B.BUSNTYPE AS NATUREOFBUSN,E.CODEDESC AS NATUREOFBUSNDESC,
B.BUSNSUBTYPE AS TYPEOFINDPUR,F.CODEDESC AS TYPEOFINDPURDESC,
B.SECCODE AS PRIMESEC,G.CODEDESC AS PRIMESECDESC,
B.PURPCODECD AS SECTOR,H.CODEDESC AS SECTORDESC,
B.CASTECODE,I.CODEDESC AS CASTECODEDESC,B.CATEGORYCD,J.CODEDESC AS CATEGORYCDDESC,B.MFGCOST,B.SERVCOST,
B.LOANTYPE,K.CODEDESC AS LOANTYPEDESC,
B.PRIORSECT,L.CODEDESC AS PRIORSECTDESC,
B.WEAKRSECT,M.CODEDESC AS WEAKRSECTDESC,
B.FUTUREPROV2 AS NATUREOFLOAN,N.CODEDESC AS NATUREOFLOANDESC,
B.FUTUREPROV3,O.CODEDESC AS FUTUREPROV3_DESC,
B.FUTUREPROV4  AS RESOLUTIONPLAN,P.CODEDESC AS RESOLUTIONPLAN_DESC,
B.FUTUREPROV5, B.FUTUREPROV6  AS PURCHASECONSTRDWELLINGUNIT,
B.ANNUALTRNOVER,B.EXPORTTRNOVER,B.ANNUALINCOME,B.AGRILANDHOLD
FROM LNMAS A 
LEFT OUTER JOIN ACBL.D030305@MISPROD B ON A.LBRCODE = B.LBRCODE AND A.PRDACCTID = B.PRDACCTID 
LEFT OUTER JOIN ACBL.D001002@MISPROD C ON C.CODETYPE = 1060 AND B.INDOTH = CAST(C.CODE AS INTEGER) 
LEFT OUTER JOIN ACBL.D001002@MISPROD D ON D.CODETYPE = 30311 AND B.RELGTYPE = CAST(D.CODE AS INTEGER) 
LEFT OUTER JOIN ACBL.D001002@MISPROD E ON E.CODETYPE = 30305 AND B.BUSNTYPE  = CAST(E.CODE AS INTEGER) 
LEFT OUTER JOIN ACBL.D001002@MISPROD F ON F.CODETYPE = 30306 AND B.BUSNSUBTYPE = CAST(F.CODE AS INTEGER) 
LEFT OUTER JOIN ACBL.D001002@MISPROD G ON G.CODETYPE = 30304 AND B.SECCODE = CAST(G.CODE AS INTEGER) 
LEFT OUTER JOIN ACBL.D001002@MISPROD H ON H.CODETYPE = 30303 AND B.PURPCODECD = CAST(H.CODE AS INTEGER) 
LEFT OUTER JOIN ACBL.D001002@MISPROD I ON I.CODETYPE = 30302 AND B.CASTECODE = CAST(I.CODE AS INTEGER) 
LEFT OUTER JOIN ACBL.D001002@MISPROD J ON J.CODETYPE = 30301 AND B.CATEGORYCD = CAST(J.CODE AS INTEGER) 
LEFT OUTER JOIN ACBL.D001002@MISPROD K ON K.CODETYPE = 30312  AND B.LOANTYPE = CAST(K.CODE AS INTEGER) 
LEFT OUTER JOIN ACBL.D001002@MISPROD L ON L.CODETYPE = 1002 AND B.PRIORSECT = L.CODE 
LEFT OUTER JOIN ACBL.D001002@MISPROD M ON M.CODETYPE = 1002 AND B.WEAKRSECT  = M.CODE 
LEFT OUTER JOIN ACBL.D001002@MISPROD N ON N.CODETYPE = 30308 AND B.FUTUREPROV2 = CAST(N.CODE AS INTEGER) 
LEFT OUTER JOIN ACBL.D001002@MISPROD O ON O.CODETYPE = 30309 AND B.FUTUREPROV3 = CAST(O.CODE AS INTEGER)
LEFT OUTER JOIN ACBL.D001002@MISPROD P ON P.CODETYPE = 30310 AND B.FUTUREPROV4 = CAST(P.CODE AS INTEGER) ORDER BY A.LBRCODE, A.PRDACCTID;

ALTER TABLE LNMAS ADD INDOTH              NUMBER(1);
ALTER TABLE LNMAS ADD INDOTHDESC          VARCHAR2(35);
ALTER TABLE LNMAS ADD RELGTYPE            NUMBER(2);
ALTER TABLE LNMAS ADD RELGTYPEDESC        VARCHAR2(35);
ALTER TABLE LNMAS ADD NATUREOFBUSN        NUMBER(4);
ALTER TABLE LNMAS ADD NATUREOFBUSNDESC    VARCHAR2(35);
ALTER TABLE LNMAS ADD TYPEOFINDPUR        NUMBER(4);
ALTER TABLE LNMAS ADD TYPEOFINDPURDESC    VARCHAR2(35);
ALTER TABLE LNMAS ADD PRIMESEC            NUMBER(4);
ALTER TABLE LNMAS ADD PRIMESECDESC        VARCHAR2(35);
ALTER TABLE LNMAS ADD SECTOR              NUMBER(4);
ALTER TABLE LNMAS ADD SECTORDESC          VARCHAR2(35);
ALTER TABLE LNMAS ADD CASTECODE           NUMBER(4);
ALTER TABLE LNMAS ADD CASTECODEDESC       VARCHAR2(35);
ALTER TABLE LNMAS ADD CATEGORYCD          NUMBER(4);
ALTER TABLE LNMAS ADD CATEGORYCDDESC      VARCHAR2(35);
ALTER TABLE LNMAS ADD MFGCOST             NUMBER(13,2);
ALTER TABLE LNMAS ADD SERVCOST            NUMBER(13,2);
ALTER TABLE LNMAS ADD LOANTYPE            NUMBER(4);
ALTER TABLE LNMAS ADD LOANTYPEDESC        VARCHAR2(35);
ALTER TABLE LNMAS ADD PRIORSECT           VARCHAR2(4);
ALTER TABLE LNMAS ADD PRIORSECTDESC       VARCHAR2(35);
ALTER TABLE LNMAS ADD WEAKRSECT           VARCHAR2(4);
ALTER TABLE LNMAS ADD WEAKRSECTDESC       VARCHAR2(35);
ALTER TABLE LNMAS ADD LOANTYPE            NUMBER(4);
ALTER TABLE LNMAS ADD LOANTYPEDESC        VARCHAR2(35);
ALTER TABLE LNMAS ADD NATUREOFLOAN        NUMBER(4);
ALTER TABLE LNMAS ADD NATUREOFLOANDESC    VARCHAR2(35);
ALTER TABLE LNMAS ADD FUTUREPROV3        NUMBER(4);
ALTER TABLE LNMAS ADD FUTUREPROV3_DESC    VARCHAR2(35);
ALTER TABLE LNMAS ADD RESOLUTIONPLAN        NUMBER(4);
ALTER TABLE LNMAS ADD RESOLUTIONPLAN_DESC    VARCHAR2(35);
ALTER TABLE LNMAS ADD FUTUREPROV5        NUMBER(13,2);
ALTER TABLE LNMAS ADD PURCHASECONSTRDWELLINGUNIT        NUMBER(13,2);
ALTER TABLE LNMAS ADD ANNUALTRNOVER       NUMBER(13,2);
ALTER TABLE LNMAS ADD EXPORTTRNOVER       NUMBER(13,2);
ALTER TABLE LNMAS ADD ANNUALINCOME        NUMBER(13,2);
ALTER TABLE LNMAS ADD AGRILANDHOLD        NUMBER(13,2);
COMMIT;

MERGE INTO LNMAS A USING LNMASTMP B ON (A.LBRCODE= B.LBRCODE AND A.PRDACCTID = B.PRDACCTID) 
WHEN MATCHED THEN UPDATE SET A.INDOTH = B.INDOTH,A.INDOTHDESC = B.INDOTHDESC,A.RELGTYPE = B.RELGTYPE,A.RELGTYPEDESC = B.RELGTYPEDESC,
A.NATUREOFBUSN=B.NATUREOFBUSN,A.NATUREOFBUSNDESC=B.NATUREOFBUSNDESC,A.TYPEOFINDPUR=B.TYPEOFINDPUR,A.TYPEOFINDPURDESC=B.TYPEOFINDPURDESC,
A.PRIMESEC=B.PRIMESEC,A.PRIMESECDESC=B.PRIMESECDESC,A.SECTOR=B.SECTOR,A.SECTORDESC=B.SECTORDESC,A.CASTECODE = B.CASTECODE,
A.CASTECODEDESC = B.CASTECODEDESC,A.CATEGORYCD = B.CATEGORYCD,A.CATEGORYCDDESC = B.CATEGORYCDDESC,A.MFGCOST = B.MFGCOST,
A.SERVCOST = B.SERVCOST,A.LOANTYPE=B.LOANTYPE,A.LOANTYPEDESC=B.LOANTYPEDESC,A.PRIORSECT=B.PRIORSECT,A.PRIORSECTDESC=B.PRIORSECTDESC,
A.WEAKRSECT=B.WEAKRSECT,A.WEAKRSECTDESC=B.WEAKRSECTDESC,A.NATUREOFLOAN=B.NATUREOFLOAN,A.NATUREOFLOANDESC=B.NATUREOFLOANDESC,
A.FUTUREPROV3=B.FUTUREPROV3,A.FUTUREPROV3_DESC=B.FUTUREPROV3_DESC,A.RESOLUTIONPLAN=B.RESOLUTIONPLAN,A.FUTUREPROV5=B.FUTUREPROV5,A.PURCHASECONSTRDWELLINGUNIT=B.PURCHASECONSTRDWELLINGUNIT,
A.ANNUALTRNOVER=B.ANNUALTRNOVER,A.EXPORTTRNOVER=B.EXPORTTRNOVER,A.ANNUALINCOME=B.ANNUALINCOME,A.AGRILANDHOLD=B.AGRILANDHOLD;
COMMIT;


DROP TABLE LNMASTMP PURGE;
DELETE FROM LNMAS WHERE LBRCODE NOT IN (SELECT B.PBRCODE FROM D001003 B);
---DELETE FROM TDREC WHERE LBRCODE NOT IN (SELECT B.PBRCODE FROM D001003 B); CHANGES ON 7-OCT-2014
DELETE FROM TDREC WHERE LBRCODE NOT IN (SELECT B.PBRCODE FROM D001003 B) OR FINALBAL = 0;
DELETE FROM CHKMAS WHERE LBRCODE NOT IN (SELECT B.PBRCODE FROM D001003 B);
DELETE FROM GLMAS WHERE LBRCODE NOT IN (SELECT B.PBRCODE FROM D001003 B);
DELETE FROM PLMAS WHERE LBRCODE NOT IN (SELECT B.PBRCODE FROM D001003 B);
COMMIT;
UPDATE WDATE SET WDATE = TRUNC(SYSDATE-1);
DROP TABLE LNCCMAS1 PURGE;
DROP TABLE LNCCMAS PURGE;
DROP TABLE MAXLIM  PURGE;
DROP TABLE LNMAS11 PURGE;
DROP TABLE MAXDLIM PURGE;
DROP TABLE LNMAS1 PURGE;
DROP TABLE TCCMAS PURGE;
DROP TABLE CCMAS PURGE;
DROP TABLE TTLNMAS PURGE;
DROP TABLE LNMASTEMP PURGE;
DROP TABLE FDISDET PURGE;
DROP TABLE DAMT PURGE;
DROP TABLE TOFFSETW PURGE;
DROP TABLE TOFFSET PURGE;
DROP TABLE XINTRATEMASTER PURGE;
DROP TABLE XOFFSETMASTER PURGE;
DROP TABLE INTTABLE  PURGE;
DROP TABLE INTTABLE1 PURGE;
DROP TABLE TCHKMAS PURGE;
DROP TABLE SECTEMP PURGE;
DROP TABLE SECTEMP1 PURGE;
DROP TABLE SECMAS PURGE;
DROP TABLE TDMAIN PURGE;
DROP TABLE TDRECT PURGE;
DROP TABLE TDRECT1 PURGE;
DROP TABLE INTRECPAY PURGE;
DROP TABLE MAXCURCDASK PURGE;
DROP TABLE FRXCURRATETSG PURGE;

UPDATE WDATE SET COUNTER = 0,OFFLINE_TD= 0,OFFLINE_LOAN= 0,OFFLINE_SB = 0,OFFLINE_CD = 0,DIFF_TD = 0,DIFF_LOAN= 0,DIFF_SBCD= 0, ONLINE_TD=0,OFFLINE_LOAN_DEF= 0;
CREATE TABLE LNTALLY AS SELECT LNMAS.LBRCODE,LNMAS.PRDCD,LNMAS.MODULETYPE,COUNT(LNMAS.PRDCD) AS ACCOUNTS,SUM(LNMAS.OS) AS BALANCE FROM LNMAS INNER JOIN PARAOFADV ON (LNMAS.PRDCD = PARAOFADV.PRDCD) WHERE (PARAOFADV.ONOFF = 1) AND ((LNMAS.ACCTSTAT <> 3))  OR ((LNMAS.ACCTSTAT = 3) AND (LNMAS.DATECLOSED > TRUNC(SYSDATE-1))) GROUP BY LNMAS.LBRCODE,LNMAS.PRDCD,LNMAS.MODULETYPE ORDER BY LNMAS.LBRCODE,LNMAS.PRDCD,LNMAS.MODULETYPE;
CREATE TABLE CHKTALLY AS SELECT LBRCODE,PRDCD,MODULETYPE,COUNT(PRDCD) AS ACCOUNTS,SUM(BALANCE4) AS BALANCE FROM CHKMAS WHERE ((CHKMAS.ACCTSTAT <> 3))  OR ((CHKMAS.ACCTSTAT = 3) AND (CHKMAS.DATECLOSED > TRUNC(SYSDATE-1))) GROUP BY LBRCODE,PRDCD,MODULETYPE ORDER BY LBRCODE,PRDCD,MODULETYPE;
CREATE TABLE TDTALLY AS SELECT LBRCODE,PRDCD,MODULETYPE,COUNT(PRDCD) AS ACCOUNTS,SUM(FINALBAL) AS BALANCE FROM TDREC WHERE ((TDREC.RECEIPTSTATUS = 51 OR TDREC.RECEIPTSTATUS = 97))  OR ((TDREC.RECEIPTSTATUS <> 51) AND (TDREC.CLOSEDDATE > TRUNC(SYSDATE-1))) GROUP BY LBRCODE,PRDCD,MODULETYPE ORDER BY LBRCODE,PRDCD,MODULETYPE;
CREATE TABLE ALLTALLY AS SELECT * FROM LNTALLY;
INSERT INTO ALLTALLY SELECT * FROM CHKTALLY;
INSERT INTO ALLTALLY SELECT * FROM TDTALLY;
CREATE TABLE FINTALLY AS SELECT ALLTALLY.LBRCODE AS LBR1,ALLTALLY.PRDCD AS PRDCD1,ALLTALLY.MODULETYPE AS MODULE,ALLTALLY.ACCOUNTS AS ACCOUNTS1,ALLTALLY.BALANCE AS ALLBAL,GLMAS.*,BALANCE - BALANCE4 AS DIFF  FROM  ALLTALLY RIGHT OUTER JOIN GLMAS ON (ALLTALLY.LBRCODE = GLMAS.LBRCODE AND ALLTALLY.PRDCD = RTRIM(SUBSTR(GLMAS.PRDACCTID, 1, 8))) WHERE ALLTALLY.BALANCE <> GLMAS.BALANCE4 ORDER BY ALLTALLY.MODULETYPE,ALLTALLY.LBRCODE,ALLTALLY.PRDCD;
ALTER TABLE FINTALLY ADD ASONDATE DATE;
UPDATE FINTALLY SET ASONDATE=TRUNC(SYSDATE-1);
UPDATE WDATE SET DIFF_TD   = (SELECT SUM(DIFF) AS AMT FROM FINTALLY WHERE MODULE IN ('20'));
UPDATE WDATE SET DIFF_LOAN = (SELECT SUM(DIFF) AS AMT FROM FINTALLY WHERE MODULE IN ('13','30','31'));
UPDATE WDATE SET DIFF_SBCD = (SELECT SUM(DIFF) AS AMT FROM FINTALLY WHERE MODULE IN ('11'));
COMMIT;
-----------------------------------CHANGE DTD 30062017------------------------------------

CREATE TABLE TDOFFLINE AS SELECT RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) AS PRD,SUM(GLMAS.BALANCE4) AS AMT FROM GLMAS INNER JOIN PARAOFTD ON  RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) = TRIM(SUBSTR(PARAOFTD.PRDCD,1,8)) WHERE  (SUBSTR(GLMAS.PRDACCTID, 9, 24) = '000000000000000000000000') AND (GLMAS.BALANCE4 <> 0) AND PARAOFTD.ONOFF = 2 AND PARAOFTD.SORTCODE1 = 1 AND PARAOFTD.SORTCODE2 = 4 GROUP BY RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) ORDER BY RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8));
UPDATE WDATE SET OFFLINE_TD = (SELECT SUM(AMT) AS AMT FROM TDOFFLINE);
CREATE TABLE LNOFF1 AS SELECT RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) AS PRD,SUM(GLMAS.BALANCE4) AS AMT,SUM(GLMAS.BALANCE4) AS AMT1 FROM GLMAS INNER JOIN PARAOFADV ON  RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) = TRIM(SUBSTR(PARAOFADV.PRDCD,1,8)) WHERE  (SUBSTR(GLMAS.PRDACCTID, 9, 24) = '000000000000000000000000') AND (GLMAS.BALANCE4 <> 0) AND PARAOFADV.ONOFF = 2 GROUP BY RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) ORDER BY RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8));
UPDATE LNOFF1 SET AMT = AMT1 * -1 WHERE AMT1 > 0 AND TRIM(LNOFF1.PRD) IN (SELECT TRIM(MINUSPLUS.PRDCD) FROM MINUSPLUS);
UPDATE WDATE SET OFFLINE_LOAN = (SELECT SUM(AMT) AS AMT FROM LNOFF1);
UPDATE WDATE SET OFFLINE_LOAN_DEF = (SELECT (SUM(AMT) * -1) FROM LNOFF1 WHERE PRD IN ('FLC','IVBG','IBG')) ;  
CREATE TABLE CDOFF AS SELECT RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) AS PRD,SUM(GLMAS.BALANCE4) AS AMT FROM GLMAS INNER JOIN PARAOFTD ON  RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) = TRIM(SUBSTR(PARAOFTD.PRDCD,1,8)) WHERE  (SUBSTR(GLMAS.PRDACCTID, 9, 24) = '000000000000000000000000') AND (GLMAS.BALANCE4 <> 0) AND PARAOFTD.ONOFF = 2 AND PARAOFTD.SORTCODE1 = 1 AND PARAOFTD.SORTCODE2 = 3 AND PARAOFTD.SORTCODE3 = 1 GROUP BY RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) ORDER BY RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8));
UPDATE CDOFF SET AMT = AMT * -1 WHERE AMT < 0 AND CDOFF.PRD IN (SELECT MINUSPLUS.PRDCD FROM MINUSPLUS);
UPDATE WDATE SET OFFLINE_CD = (SELECT SUM(AMT) AS AMT FROM CDOFF);
CREATE TABLE SBOFF AS SELECT RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) AS PRD,SUM(GLMAS.BALANCE4) AS AMT FROM GLMAS INNER JOIN PARAOFTD ON  RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) = TRIM(SUBSTR(PARAOFTD.PRDCD,1,8)) WHERE  (SUBSTR(GLMAS.PRDACCTID, 9, 24) = '000000000000000000000000') AND (GLMAS.BALANCE4 <> 0) AND PARAOFTD.ONOFF = 2 AND PARAOFTD.SORTCODE1 = 1 AND PARAOFTD.SORTCODE2 = 3 AND PARAOFTD.SORTCODE3 = 2 GROUP BY RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8)) ORDER BY RTRIM(SUBSTR(GLMAS.PRDACCTID,1,8));
UPDATE SBOFF SET AMT = AMT * -1 WHERE AMT < 0 AND TRIM(SBOFF.PRD) IN (SELECT TRIM(MINUSPLUS.PRDCD) FROM MINUSPLUS);
UPDATE WDATE SET OFFLINE_SB = (SELECT SUM(AMT) AS AMT FROM SBOFF);
COMMIT;
--------------------------------------------------------------------------------------------------

-- THIS FOR REPORT NO 107
ALTER TABLE TDREC ADD TMPRT NUMBER(6,2) DEFAULT 0;
DROP TABLE LNTALLY PURGE;
DROP TABLE CHKTALLY PURGE;
DROP TABLE TDTALLY PURGE;
DROP TABLE ALLTALLY PURGE;
DROP TABLE FINTALLY PURGE;
DROP TABLE TDOFFLINE PURGE;
DROP TABLE LNOFF1 PURGE;
DROP TABLE CDOFF PURGE;
DROP TABLE SBOFF PURGE;
--- THIS IS FOR ONLINETD AMOUNT UPDATE IN WDATE TABLE
UPDATE WDATE SET ONLINE_TD = (SELECT SUM(A.FINALBAL) FROM TDREC A INNER JOIN PARAOFTD B ON (A.PRDCD = B.PRDCD) WHERE (B.ONOFF = 1) AND (A.RECEIPTSTATUS IN('51','97') OR (A.RECEIPTSTATUS <> '51' AND A.CLOSEDDATE > TRUNC(SYSDATE-1))) );
---THIS IS FOR UPDATE TOTAL RECOVERY IN ACCOUNT --27-12-2012
--============================================================================================================================================
DROP TABLE TOTRECCHE;
CREATE TABLE TOTRECCHE  AS SELECT A.LBRCODE, A.MAINACCTID, SUM(A.FCYTRNAMT) AS RECAMT 
FROM ACBL.D009040@MISPROD A 
WHERE A.ENTRYDATE BETWEEN (LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE-1),-1))+1) AND TRUNC(SYSDATE-1) AND A.ACTIVITYTYPE IN ('CASI','ECSCR','INSTLPAY','LNSI') AND A.CASHFLOWTYPE IN ('LNPCR','OTHCHGCR','LNOCHCR') AND 
A.CANCELEDFLAG <> 'C'  GROUP BY A.LBRCODE, A.MAINACCTID ORDER BY  A.LBRCODE, A.MAINACCTID;

DROP TABLE TOTREC;
CREATE TABLE TOTREC AS 
SELECT A.*,B.RECAMT FROM LNMAS A INNER JOIN TOTRECCHE B ON (A.LBRCODE = B.LBRCODE AND A.PRDACCTID = B.MAINACCTID); 

DROP TABLE TOTINTREC; 
CREATE TABLE TOTINTREC AS SELECT A.LBRCODE, A.MAINACCTID, SUM(A.FCYTRNAMT) AS RECAMT 
FROM ACBL.D009040@MISPROD A 
WHERE A.ENTRYDATE BETWEEN (LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE-1),-1))+1) AND TRUNC(SYSDATE-1) AND A.CASHFLOWTYPE IN ('LNPINTCR') AND 
A.CANCELEDFLAG <> 'C' AND A.LBRCODE || A.MAINACCTID IN (SELECT B.LBRCODE || B.PRDACCTID FROM LNMAS B ) GROUP BY  A.LBRCODE, A.MAINACCTID ORDER BY  A.LBRCODE, A.MAINACCTID;
--============================================================================================================================================
--DROP TABLE TOTREC; 
--DROP TABLE TOTINTREC; 
--CREATE TABLE TOTREC  AS SELECT A.LBRCODE, A.MAINACCTID, SUM(A.FCYTRNAMT) AS RECAMT FROM ACBL.D009040@MISPROD A WHERE A.ENTRYDATE BETWEEN (LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE-1),-1))+1) AND TRUNC(SYSDATE-1) AND A.ACTIVITYTYPE IN ('CASI','ECSCR','INSTLPAY','LNSI') AND A.CASHFLOWTYPE IN ('LNPCR','OTHCHGCR','LNOCHCR') AND A.CANCELEDFLAG <> 'C' AND A.LBRCODE || A.MAINACCTID IN (SELECT B.LBRCODE || B.PRDACCTID FROM LNMAS B ) GROUP BY  A.LBRCODE, A.MAINACCTID ORDER BY  A.LBRCODE, A.MAINACCTID;
--CREATE TABLE TOTINTREC AS SELECT A.LBRCODE, A.MAINACCTID, SUM(A.FCYTRNAMT) AS RECAMT FROM ACBL.D009040@MISPROD A WHERE A.ENTRYDATE BETWEEN (LAST_DAY(ADD_MONTHS(TRUNC(SYSDATE-1),-1))+1) AND TRUNC(SYSDATE-1) AND A.CASHFLOWTYPE IN ('LNPINTCR') AND A.CANCELEDFLAG <> 'C' AND A.LBRCODE || A.MAINACCTID IN (SELECT B.LBRCODE || B.PRDACCTID FROM LNMAS B ) GROUP BY  A.LBRCODE, A.MAINACCTID ORDER BY  A.LBRCODE, A.MAINACCTID;
--============================================================================================================================================
ALTER TABLE LNMAS ADD TOTREC NUMBER(13,2) DEFAULT 0;
ALTER TABLE LNMAS ADD TOTINTREC NUMBER(13,2) DEFAULT 0;
MERGE INTO LNMAS A USING TOTREC B     ON (A.LBRCODE= B.LBRCODE AND A.PRDACCTID = B.PRDACCTID) WHEN MATCHED THEN UPDATE SET A.TOTREC = B.RECAMT;
MERGE INTO LNMAS A USING TOTINTREC B  ON (A.LBRCODE= B.LBRCODE AND A.PRDACCTID = B.MAINACCTID) WHEN MATCHED THEN UPDATE SET A.TOTINTREC = B.RECAMT;
DROP TABLE TOTREC; 
DROP TABLE TOTINTREC; 
COMMIT;

ALTER TABLE LNMAS ADD PRODUCT NUMBER(13,2) DEFAULT 0;
MERGE INTO LNMAS A USING OFFSET B ON (A.LBRCODE= B.LBRCODE AND A.PRDACCTID = B.PRDACCTID AND B.SRNO = 1 ) WHEN MATCHED THEN UPDATE SET A.PRODUCT = (A.OS * B.FINALRATE);
UPDATE LNMAS SET PRODUCT = (OS*.001) WHERE PRODUCT = 0;
COMMIT;
--- THIS IS FOR ADD GROUP CUSTOMER NUMBER IN LNMAS - 16-SEP-2022
ALTER TABLE LNMAS ADD MAINCUSTNO NUMBER(9) DEFAULT 0;
MERGE INTO LNMAS A USING ACBL.D009011@MISPROD B ON (A.CUSTNO= B.CUSTNO) WHEN MATCHED THEN UPDATE SET A.MAINCUSTNO = B.MAINCUSTNO;
COMMIT;
---DDS ONLINE 26 MARCH 2012 --------------------------------------------------

DELETE FROM DDSMAS;
COMMIT;
INSERT INTO TESTDB.DDSMAS 
SELECT  B.LBRCODE, B.PRDCD, B.NAME, B.MODULETYPE, 'INR' AS  CURCD,'N' AS   MULTICURYN, 'Q' AS INTFREQ, 'Y' AS CUMINTYN,'I' AS  INSTORPRINCAMT,0 AS INTCRACCTID,C.PRDACCTID, C.NAMETITLE, C.LONGNAME, C.ACCTTYPE, C.INTOFFSET, C.CUSTNO, 'N' AS  TDSYN,99 AS  TDSREASONCD, '01-JAN-1900'  AS   TDSFRM15SUBDT,0 AS MTDPRDACCTID, '                              ' AS BRNAME,C.LBRCODE AS RLBRCODE,C.PRDACCTID AS RPRDACCTID, C.NAMETITLE AS RNAMETITLE, C.LONGNAME AS RLONGNAME, 'INR' AS  RCURCD,C.INTOFFSET AS OFFSETRATE,C.DATEOPEN AS CERTDATE, C.DATEOPEN AS ASOFFDATE, 12 AS  NOINST,12 AS  NOOFMONTHS, 0 AS NOOFDAYS,3.50 AS INTRATE,0 AS  INSTORPRINCAM, 0 AS MATVAL, (C.DATEOPEN + 365) AS MATDATE,0 AS TOTALLIEN, 51 AS  RECEIPTSTATUS,'0' AS TRFRACCTID, 0 AS  MONTHSDELAY, 
C.DATECLOSED AS CLOSEDDATE,0 AS MAINBALFCY,0 AS INTPRVDAMTFCY,0 AS  INTPAIDAMTFCY, 0 AS TDSAMTFCY, 'N' AS RTDSYN, 99 AS RTDSREASONCD,'                              ' AS RBRNAME    
FROM    ACBL.D009021@MISPROD B INNER JOIN
        ACBL.D009022@MISPROD C ON B.LBRCODE = C.LBRCODE AND B.PRDCD = RTRIM(SUBSTR(C.PRDACCTID, 1, 8)) 
WHERE   (B.MODULETYPE IN (11,47)) AND (C.ACCTSTAT <> 3) AND (B.PRDCD LIKE 'DDS%') OR
        (B.MODULETYPE IN (11,47)) AND (B.PRDCD LIKE 'DDS%') AND (C.ACCTSTAT = 3) AND (C.DATECLOSED > TRUNC(SYSDATE-1)) 
ORDER BY B.LBRCODE,C.PRDACCTID;     
COMMIT;
UPDATE DDSMAS SET BRNAME = (SELECT NAME FROM ACBL.D001003@MISPROD G WHERE DDSMAS.LBRCODE = G.PBRCODE);
COMMIT;
UPDATE DDSMAS SET RBRNAME = (SELECT NAME FROM ACBL.D001003@MISPROD G WHERE DDSMAS.LBRCODE = G.PBRCODE);
COMMIT;  


DROP TABLE DDSMAS1 PURGE;
CREATE TABLE TESTDB.DDSMAS1 AS 
SELECT  DDSMAS.*,F.CBLDATE, F.BALANCE1, F.BALANCE2, F.BALANCE3, F.BALANCE4, F.BALANCE5, F.BALANCE6, 
                      F.BALANCE7, F.BALANCE8, F.BALANCE9, F.BALANCE10, F.BALANCE11, F.BALANCE12, F.BALANCE13, 
                      F.BALANCE14, F.BALANCE15
FROM         ACBL.D010014@MISPROD F INNER JOIN
                      CBLMAS ON F.LBRCODE = CBLMAS.LBRCODE AND F.PRDACCTID = CBLMAS.PRDACCTID AND 
                      F.CBLDATE = CBLMAS.CBDATE RIGHT OUTER JOIN
                      DDSMAS ON CBLMAS.LBRCODE = DDSMAS.LBRCODE AND CBLMAS.PRDACCTID = DDSMAS.PRDACCTID;
ALTER TABLE DDSMAS1 ADD FINALBAL  FLOAT DEFAULT 0;
UPDATE DDSMAS1 SET INSTORPRINCAMT = BALANCE4,MATVAL = BALANCE4,MAINBALFCY = BALANCE4;
COMMIT;
UPDATE DDSMAS1 SET FINALBAL = BALANCE4;
COMMIT;
UPDATE DDSMAS1 SET  RECEIPTSTATUS = 98 WHERE FINALBAL = 0; 
COMMIT;
UPDATE DDSMAS1 SET  RECEIPTSTATUS = 51 WHERE  RECEIPTSTATUS <> 98;
COMMIT;
UPDATE DDSMAS1 SET MATVAL = FINALBAL; 
COMMIT;
ALTER TABLE DDSMAS1 ADD SRLNO NUMBER;
ALTER TABLE DDSMAS1 ADD DESC1 VARCHAR2(50);
ALTER TABLE DDSMAS1 ADD TMPRT NUMBER(6,2);

---ALTER TABLE DDSMAS1 ADD ACNO NUMBER(8);
---ALTER TABLE DDSMAS1 ADD RECEIPTNO NUMBER(8);
---ALTER TABLE DDSMAS1 ADD ACCTTYPEDESC VARCHAR2(40);
COMMIT;
UPDATE DDSMAS1 SET MODULETYPE = 20;
COMMIT;
DELETE FROM CHKMAS WHERE PRDCD LIKE 'DDS%';
COMMIT; 
UPDATE DDSMAS1 SET INSTORPRINCAMT = 0 WHERE INSTORPRINCAMT IS NULL;
UPDATE DDSMAS1 SET MATVAL = 0 WHERE MATVAL IS NULL;
UPDATE DDSMAS1 SET MAINBALFCY = 0 WHERE MAINBALFCY IS NULL;
COMMIT;
INSERT INTO TDREC SELECT * FROM DDSMAS1;
COMMIT;

/*  THIS CODE IS ADDED FOR ACCTYPEDESC UPDATE IN TDREC FOR BI BY ASHITA ON 20-JUN-2013 */

ALTER TABLE TDREC ADD ACCTTYPEDESC VARCHAR(40);
COMMIT;
UPDATE TDREC SET ACCTTYPEDESC = (SELECT CODEDESC FROM ACBL.D001002@MISPROD G WHERE G.CODETYPE = 1067 AND TDREC.ACCTTYPE = G.CODE);
COMMIT;
UPDATE TDREC SET ACCTTYPEDESC = '0' WHERE ACCTTYPEDESC IS NULL;
COMMIT;
/*  UP TO THIS */
/* UPDATE ACNO IN TABLE - 11-AUG-2012 */

ALTER TABLE CHKMAS ADD ACNO NUMBER(8) DEFAULT 0;
UPDATE CHKMAS SET ACNO = CAST(SUBSTR(PRDACCTID,17,8)AS INTEGER);
ALTER TABLE GLMAS ADD PRDCD VARCHAR(8);
UPDATE GLMAS SET PRDCD = TRIM(SUBSTR(PRDACCTID,1,8));
ALTER TABLE LNMAS ADD ACNO NUMBER(8) DEFAULT 0;
UPDATE LNMAS SET ACNO = CAST(SUBSTR(PRDACCTID,17,8)AS INTEGER);
ALTER TABLE OFFSET ADD ACNO NUMBER(8) DEFAULT 0;
UPDATE OFFSET SET ACNO = CAST(SUBSTR(PRDACCTID,17,8)AS INTEGER);
ALTER TABLE TDREC ADD ACNO NUMBER(8) DEFAULT 0;
ALTER TABLE TDREC ADD RECEIPTNO NUMBER(8) DEFAULT 0;
UPDATE TDREC SET ACNO = CAST(SUBSTR(RPRDACCTID,17,8)AS INTEGER), RECEIPTNO = CAST(SUBSTR(RPRDACCTID,25,8)AS INTEGER);
ALTER TABLE LNSURMAS ADD PRDCD VARCHAR(8);
ALTER TABLE LNSURMAS ADD ACNO NUMBER(8) DEFAULT 0;
UPDATE LNSURMAS SET PRDCD = SUBSTR(PRDACCTID,1,8), ACNO = CAST(SUBSTR(PRDACCTID,17,8)AS INTEGER);
ALTER TABLE SECDET ADD PRDCD VARCHAR(8);
ALTER TABLE SECDET ADD ACNO NUMBER(8) DEFAULT 0;
UPDATE SECDET SET PRDCD = SUBSTR(PRDACCTID,1,8), ACNO = CAST(SUBSTR(PRDACCTID,17,8)AS INTEGER);
ALTER TABLE REVMAS ADD PRDCD VARCHAR(8);
ALTER TABLE REVMAS ADD ACNO NUMBER(8) DEFAULT 0;
UPDATE REVMAS SET ACNO = CAST(SUBSTR(PRDACCTID,17,8)AS INTEGER);
ALTER TABLE MACHEQUIP ADD PRDCD VARCHAR(8);
ALTER TABLE MACHEQUIP ADD ACNO NUMBER(8) DEFAULT 0;
UPDATE MACHEQUIP SET PRDCD = SUBSTR(PRDACCTID,1,8), ACNO = CAST(SUBSTR(PRDACCTID,17,8)AS INTEGER);
COMMIT;
--- THIS FOR NONFUND BASE EXPOSURE
DROP TABLE NONFUNDMAST;
DROP TABLE NONFUNDSUBLIMIT;
CREATE TABLE NONFUNDMAST AS
SELECT  B.LBRCODE, B.PRDCD, CAST(SUBSTR(C.PRDACCTID,17,8)AS INTEGER) AS ACNO, C.PRDACCTID, C.NAMETITLE, C.LONGNAME, C.DATEOPEN, C.DATECLOSED, C.ACCTTYPE, C.ACCTSTAT, C.CUSTNO, D.MAINCUSTNO,
E.EFFDATE, E.LIMTYPE, E.ENTRYDATE, E.SANCDATE, E.EXPIRYDATE, E.SANCAUTH, E.MARGINRATE, E.SANCLIMITAMT, E.REMARKS, E.DRAWPRAMT, E.DPREMARKS, E.LIMBLOCKED, E.MARGINHELD
FROM ACBL.D009021@MISPROD B INNER JOIN  ACBL.D009022@MISPROD C ON B.LBRCODE = C.LBRCODE AND B.PRDCD = RTRIM(SUBSTR(C.PRDACCTID, 1, 8)) 
LEFT OUTER JOIN ACBL.D009011@MISPROD D ON C.CUSTNO = D.CUSTNO LEFT OUTER JOIN ACBL.D530011@MISPROD E ON C.LBRCODE = E.LBRCODE AND C.PRDACCTID = E.PRDACCTID
WHERE B.MODULETYPE IN (530) ORDER BY B.LBRCODE,C.PRDACCTID;

CREATE TABLE NONFUNDSUBLIMIT AS SELECT A.*, B.BGID, B.BGTYPE, B.LIMITTYPE, B.AMOUNTCURCD, B.AMOUNTAMT, B.BANKCD, B.BRANCHCD, B.SECUREDTYPE, B.MARGINTYPE, B.MARGINAMT, B.MARGREQD, B.MRGPRDACCTID, B.EXPDT, B.BENEFCD, B.CLAIMPRD, B.CLAIMDAYS, B.CLAIMFROMDT, B.CLAIMENDDT, B.DRACCTID, B.IISECAMT, B.BGAMOUNTAMT, B.ISSUEDT, B.CLAIMDT, B.INVOKEDT, B.STATUS1, B.STATUS2
FROM NONFUNDMAST A LEFT OUTER JOIN ACBL.D530004@MISPROD B ON A.LBRCODE = B.LBRCODE AND 
RTRIM(SUBSTR(A.PRDACCTID, 1, 24))  = RTRIM(SUBSTR(B.PRDACCTID, 1, 24)) ORDER BY A.LBRCODE, A.PRDACCTID;
---------------------------------------------------------------------------------------------------------------------------------------

----------------- ADHOC LIMIT ADDED IN LIIMIT - 4:14 PM 12/09/2017 -- CHETAN SAHEB /  GAWADE
----DROP TABLE ADHOCLIMIT PURGE;
----CREATE TABLE ADHOCLIMIT AS
----SELECT X.LBRCODE, X.PRDACCTID, SUM(X.TOTSANCLIMIT) TOTSANCLIMIT FROM
----(SELECT A.LBRCODE,A.PRDACCTID, A.EFFFROMDATE, A.CURCD,A.SANCDATE,A.EXPDATE,A.SANCAUTHORITY,A.TOTSANCLIMIT,A.REMARKS,A.WAESANCLIMIT, A.GRACEPER, A.INTERESTRATE, B.MODULETYPE
----FROM ACBL.D009047@MISPROD A
----LEFT OUTER JOIN ACBL.D009021@MISPROD B ON A.LBRCODE = B.LBRCODE AND TRIM(SUBSTR(A.PRDACCTID,1,8)) = TRIM(B.PRDCD)
----LEFT OUTER JOIN ACBL.D009022@MISPROD C ON A.LBRCODE = C.LBRCODE AND A.PRDACCTID = C.PRDACCTID
----WHERE A.EXPDATE >= TRUNC(SYSDATE-1) AND (
----((B.MODULETYPE IN (13, 30, 31))  AND C.ACCTSTAT <> 3) OR
----((B.MODULETYPE IN (13, 30, 31))  AND (C.ACCTSTAT = 3 AND C.DATECLOSED > TRUNC(SYSDATE-1))) OR 
----((B.MODULETYPE IN (13, 30, 31))  AND (C.ACCTSTAT = 3 AND C.DATECLOSED = '01-JAN-1900' AND C.LASTCRDATE > TRUNC(SYSDATE-1))))) X GROUP BY X.LBRCODE, X.PRDACCTID;
----SELECT LBRCODE, PRDACCTID, TOTSANCLIMIT FROM LNMAS WHERE LBRCODE || PRDACCTID IN ( SELECT LBRCODE || PRDACCTID FROM ADHOCLIMIT)
----MERGE INTO LNMAS A USING ADHOCLIMIT B  ON (A.LBRCODE= B.LBRCODE AND A.PRDACCTID = B.PRDACCTID) WHEN MATCHED THEN UPDATE SET A.BALANCE15 = A.TOTSANCLIMIT, A.TOTSANCLIMIT = (A.TOTSANCLIMIT + B.TOTSANCLIMIT);
----COMMIT;
----------------------------------------------------------------------------------------------------------------------------------------------------------------
---npa update---
MERGE INTO LNMAS A USING ACBL.D030011@MISPROD B ON (A.LBRCODE = B.LBRCODE AND A.PRDACCTID = B.PRDACCTID) WHEN MATCHED THEN UPDATE SET A.ASSETCD = B.ASSETCD;
UPDATE LNMAS SET ASSETDESC = (SELECT CODEDESC FROM ACBL.D001002@MISPROD YY WHERE YY.CODETYPE = 30013 AND YY.CODE = LNMAS.ASSETCD);
COMMIT;
DROP TABLE LNMAS_FN;
CREATE TABLE LNMAS_FN AS SELECT LNMAS.* FROM LNMAS INNER JOIN PARAOFADV ON (LNMAS.PRDCD = PARAOFADV.PRDCD AND PARAOFADV.ONOFF = 1) WHERE (((LNMAS.ACCTSTAT <> 3))  OR ((LNMAS.ACCTSTAT = 3) AND (LNMAS.DATECLOSED > TRUNC(SYSDATE-1)))) AND DATEOPEN <= TRUNC(SYSDATE-1) ORDER BY LNMAS.LBRCODE,LNMAS.PRDACCTID;
ALTER TABLE LNMAS_FN ADD ZONECODE NUMBER(3);
ALTER TABLE LNMAS_FN ADD ZONENAME NVARCHAR2(25);
MERGE INTO LNMAS_FN A USING ZONE B ON (A.LBRCODE= B.PBRCODE) WHEN MATCHED THEN UPDATE SET A.ZONECODE = B.ZONECODE,A.ZONENAME = B.ZONENAME;
COMMIT;

===================================================================================================================

-----------------------NEW PRINCIPAL OVERDUE\TOTAL OVERDUE-------------------------------------------------------------------------------------

DROP TABLE LOAN_OVDUE1 PURGE;
CREATE TABLE LOAN_OVDUE1 AS 
SELECT A.LBRCODE,RTRIM(SUBSTR(A.PRDACCTID, 1, 8)) AS PRDCD,LTRIM(cast(SUBSTR(A.PRDACCTID, 9, 16) as integer)) AS ACNO,
NVL((A.BALANCE6 - A.BALANCE7),0) AS LOAN_OVDUE_INTREC FROM ACBL.D010014@MISPROD A INNER JOIN
CBLMAS B ON A.LBRCODE = B.LBRCODE AND A.PRDACCTID = B.PRDACCTID AND A.CBLDATE = B.CBDATE
WHERE RTRIM(SUBSTR(A.PRDACCTID, 1, 8)) IN ('FLXLN','TDLOAN','NSCLN','SOD');

DROP TABLE LOAN_OVDUE PURGE;
CREATE TABLE LOAN_OVDUE AS
SELECT B.LBRCODE,B.PRDACCTID,B.PRDCD,B.ACNO,B.MODULETYPE,B.ACCOUNTTYPE,B.ACCOUNTSTATUS,B.ADVAMOUNT,B.INSTALAMOUNT,B.MAINBALFCY,
ABS(B.PRIN_OD) AS PRIN_OD,B.INTREC_OD,B.CHARGES_OD,B.PENAL_OD,B.NPAINT_OD,B.TOTAL_DP,
(ABS(B.PRIN_OD)+B.INTREC_OD+B.CHARGES_OD+B.PENAL_OD) AS TOTAL_OD,
B.PRINCIPALOVERDUE,B.INTERESTOVERDUE FROM
(
SELECT A.LBRCODE,A.PRDACCTID,A.PRDCD,A.ACNO,A.MODULETYPE,A.ACCOUNTTYPE,A.ACCOUNTSTATUS,
A.ADVAMOUNT,A.INSTALAMOUNT,A.MAINBALFCY,
--NVL((A.PRINCIPALOVERDUE-A.INTREC_OD-A.CHARGES_OD-A.PENAL_OD),0) AS PRIN_OD,
CASE WHEN A.PRDCD NOT LIKE '%CC%' THEN NVL((A.PRINCIPALOVERDUE-A.INTREC_OD-A.CHARGES_OD-A.PENAL_OD),0) ELSE A.PRINCIPALOVERDUE END AS PRIN_OD,
NVL(A.INTREC_OD,0) AS INTREC_OD,NVL(A.CHARGES_OD,0) AS CHARGES_OD,NVL(A.PENAL_OD,0) AS PENAL_OD,
NVL(A.NPAINT_OD,0) AS NPAINT_OD,NVL(A.TOTAL_DP,0) AS TOTAL_DP,
A.PRINCIPALOVERDUE,A.INTERESTOVERDUE FROM 
(
SELECT A.EFFDATE,A.LBRCODE,A.PRDACCTID,RTRIM(SUBSTR(A.PRDACCTID, 1, 8)) AS PRDCD,LTRIM(CAST(SUBSTR(A.PRDACCTID, 9, 16) AS INTEGER)) AS ACNO,
B.MODULETYPE,A.ACCOUNTTYPE,A.ACCOUNTSTATUS,A.ADVAMOUNT,A.INSTALAMOUNT,
CASE 
WHEN (A.MAINBALFCY < 0) THEN (A.MAINBALFCY * -1) ELSE A.MAINBALFCY END AS MAINBALFCY,
CASE 
WHEN B.MODULETYPE IN (30,31) THEN (A.INTRECPRVD-A.INTRECPAID) 
WHEN RTRIM(SUBSTR(A.PRDACCTID, 1, 8)) IN ('FLXLN','TDLOAN','NSCLN','SOD') THEN C.LOAN_OVDUE_INTREC
ELSE A.CALLBACKINTOS END AS INTREC_OD,
A.CHARGESPRVD,A.CHARGESPAID,(A.CHARGESPRVD-A.CHARGESPAID) AS CHARGES_OD,A.PENALPRVD,A.PENALPAID,(A.PENALPRVD-A.PENALPAID) AS PENAL_OD,
A.NPAINTPRVD,A.NPAINTPAID,(A.NPAINTPRVD-A.NPAINTPAID) AS NPAINT_OD,
A.PRINCIPALDP,A.INTERESTDP,(A.PRINCIPALDP+A.INTERESTDP) AS TOTAL_DP,A.PRINCIPALOVERDUE,A.INTERESTOVERDUE
FROM ACBL.D035714@MISPROD A
LEFT JOIN ACBL.D009021@MISPROD B ON (A.LBRCODE = B.LBRCODE AND B.PRDCD = RTRIM(SUBSTR(A.PRDACCTID, 1, 8)))
LEFT JOIN LOAN_OVDUE1 C ON (A.LBRCODE = C.LBRCODE AND RTRIM(SUBSTR(A.PRDACCTID, 1, 8)) = RTRIM(C.PRDCD) AND LTRIM(CAST(SUBSTR(A.PRDACCTID, 9, 16) AS INTEGER)) = LTRIM(C.ACNO))
WHERE A.EFFDATE=(SELECT MAX(RPDATE) FROM NLBDLIST9)
)A
)B
;
COMMIT;

DROP TABLE LNMAS_FN_TG PURGE;
CREATE TABLE LNMAS_FN_TG AS 
SELECT A.LBRCODE,A.PRDCD,A.MODULETYPE,A.NAMETITLE,A.PRDACCTID,A.LONGNAME,A.DATEOPEN,A.DATECLOSED,A.DTOFBIRTH,A.ACCTTYPE,A.ACCTSTAT,A.MODEOPRN,A.CUSTNO,
A.LASTDRDATE,A.LASTCRDATE,A.PLRLINKYN,A.DPYN,A.LEDGERNO,A.FROMMNTH1,A.NOOFMNTH1,A.FROMMNTH2,A.NOOFMNTH2,A.EFFFROMDATE,A.PLR,A.SANCDATE,A.TOTSANCLIMIT,
A.EXPLESSGRACE,A.EXPDATE,A.EQUATEDYN,A.INTFUNDEDYN,A.NOOFINSTL,A.GRCDAYSFORINST,A.DISBURSEDDATE,A.DISBURSEDAMT,A.INSTLSTARTDATE,A.INSTLAMT,A.INSTLINTCOMP,
A.LOANTERMCD,A.ASSETCD,A.HEALTHCD,A.OVERDUESINCEDT,A.NPADATE,A.NPAREASONCD,A.NPAREMARKS,A.IRPRDACCTID,A.BRNAME,A.TRMDESC,A.HLTDESC,A.ASSETDESC,A.CBLDATE,
A.BALANCE1,A.BALANCE2,A.BALANCE3,A.BALANCE4,A.BALANCE5,A.BALANCE6,A.BALANCE7,A.BALANCE8,A.BALANCE9,A.BALANCE10,A.BALANCE11,A.BALANCE12,A.BALANCE13,A.BALANCE14,
A.BALANCE15,A.OS,
--A.IOVERDUE,A.POVERDUE,A.ODINST,A.OVERDUE,A.DP,A.INTREC,
AA.PRIN_OD,AA.INTREC_OD,AA.CHARGES_OD,AA.PENAL_OD,NPAINT_OD,TOTAL_OD,AA.TOTAL_DP,
A.DISBDATE,A.INSTDATE,A.SRLNO,A.DESC1,A.INDOTH,A.INDOTHDESC,A.RELGTYPE,A.RELGTYPEDESC,
A.NATUREOFBUSN,A.NATUREOFBUSNDESC,A.TYPEOFINDPUR,A.TYPEOFINDPURDESC,A.PRIMESEC,A.PRIMESECDESC,A.SECTOR,A.SECTORDESC,A.CASTECODE,A.CASTECODEDESC,A.CATEGORYCD,
A.CATEGORYCDDESC,A.MFGCOST,A.SERVCOST,A.LOANTYPE,A.LOANTYPEDESC,A.PRIORSECT,A.PRIORSECTDESC,A.WEAKRSECT,A.WEAKRSECTDESC,A.NATUREOFLOAN,A.NATUREOFLOANDESC,
A.FUTUREPROV3,A.FUTUREPROV3_DESC,A.RESOLUTIONPLAN,A.RESOLUTIONPLAN_DESC,A.FUTUREPROV5,A.PURCHASECONSTRDWELLINGUNIT,A.ANNUALTRNOVER,A.EXPORTTRNOVER,A.ANNUALINCOME,
A.AGRILANDHOLD,A.TOTREC,A.TOTINTREC,A.PRODUCT,A.MAINCUSTNO,A.ACNO
FROM LNMAS_FN A
LEFT JOIN 
(
SELECT A.*,B.MAINBALFCY,NVL(B.PRIN_OD,0) AS PRIN_OD,
CASE WHEN A.PRDCD IN ('FLXLN','TDLOAN','NSCLN','SOD') THEN  NVL(C.LOAN_OVDUE_INTREC,0) ELSE NVL(B.INTREC_OD,0) END INTREC_OD,
NVL(B.CHARGES_OD,0) AS CHARGES_OD,NVL(B.PENAL_OD,0) AS PENAL_OD,NVL(B.NPAINT_OD,0) AS NPAINT_OD,NVL(B.TOTAL_DP,0) AS TOTAL_DP,NVL(B.TOTAL_OD,0) AS TOTAL_OD,
B.PRINCIPALOVERDUE,B.INTERESTOVERDUE FROM LNMAS_FN A 
LEFT JOIN LOAN_OVDUE B ON (A.LBRCODE=B.LBRCODE AND A.PRDCD=B.PRDCD AND A.ACNO=B.ACNO)
LEFT JOIN LOAN_OVDUE1 C ON (A.LBRCODE = C.LBRCODE AND A.PRDCD = C.PRDCD AND A.ACNO = C.ACNO)
)AA ON (A.LBRCODE=AA.LBRCODE AND A.PRDCD=AA.PRDCD AND A.ACNO=AA.ACNO);

===================TABLE CREATED DTD 22/02/2022===============================================================================

DROP TABLE TDREC_FN;
CREATE TABLE TDREC_FN AS  
SELECT TDREC.* FROM TDREC  INNER JOIN PARAOFTD ON (TDREC.PRDCD = PARAOFTD.PRDCD)
where ((RECEIPTSTATUS = 51 or RECEIPTSTATUS = 97) OR (RECEIPTSTATUS <> 51 AND CLOSEDDATE > TRUNC(SYSDATE-1))) AND FINALBAL > 0 AND (PARAOFTD.ONOFF = 1) AND (FINALBAL <> 0);
COMMIT;
==============================================================================================================================
DROP TABLE TDREC_TDMTD PURGE;
CREATE TABLE TDREC_TDMTD AS
SELECT SYSDATE RUNTIME, Z.* FROM (
SELECT
(SELECT WDATE FROM WDATE) RPTDATE,
CASE WHEN (B.RECEIPTSTATUS = 99 AND TRFCLOSEDATE = '01JAN1900') THEN 1 ELSE 0 END AS CHK_RECEIPTSTATUS,
E.CUSTNO,E.LONGNAME, 
E.ACCTTYPE,(SELECT CODEDESC FROM ACBL.D001002@MISPROD WHERE CODETYPE = 1067 AND CODE = E.ACCTTYPE) AS ACCTTYPE_DESC,
A.LBRCODE, D.NAME BRANCHNAME,
A.STATUS RECEIPTSTATUS_MTD, C.MTDPRDACCTID, LTRIM(RTRIM(SUBSTR(C.MTDPRDACCTID,1,8))) PRDCD_MTD, CAST(SUBSTR(C.MTDPRDACCTID,17,8) AS INT) ACCTNO_MTD,
B.RECEIPTSTATUS RECEIPTSTATUS_TD, A.PRDACCTID, LTRIM(RTRIM(SUBSTR(A.PRDACCTID,1,8))) PRDCD_TD, CAST(SUBSTR(A.PRDACCTID,17,8) AS INT) ACCTNO_TD, CAST(SUBSTR(A.PRDACCTID,26,8) AS INT) RECTNO_TD,	
A.TRFOPENDATE,	
A.TRFCLOSEDATE,	
A.MAINBALFCY, A.TRFAMOUNT,  
B.CLOSEDDATE,
B.CERTDATE,  B.ASOFFDATE, B.MATDATE,  
B.INTRATE, B.OFFSETRATE,
B.INSTORPRINCAMT, B.MATVAL
FROM ACBL.D020017@MISPROD A
JOIN ACBL.D020004@MISPROD B ON B.LBRCODE = A.LBRCODE AND B.PRDACCTID = A.PRDACCTID
JOIN ACBL.D020002@MISPROD C ON A.LBRCODE = C.LBRCODE AND LTRIM(RTRIM(SUBSTR(A.PRDACCTID,1,8)))  = C.PRDCD
JOIN ACBL.D001003@MISPROD D ON A.LBRCODE = D.PBRCODE
JOIN ACBL.D009022@MISPROD E ON A.LBRCODE = E.LBRCODE AND TRIM(SUBSTR(A.PRDACCTID,1,24)) = TRIM(SUBSTR(E.PRDACCTID,1,24))  
WHERE (
(A.TRFOPENDATE <= (SELECT TRUNC(WDATE) FROM WDATE) AND A.TRFCLOSEDATE  = '01JAN1900' AND A.STATUS = 1) 
OR (A.TRFOPENDATE <= (SELECT TRUNC(WDATE) FROM WDATE) AND B.CLOSEDDATE > (SELECT TRUNC(WDATE) FROM WDATE))
)
AND (RECEIPTSTATUS NOT IN (99) OR TRFCLOSEDATE <> '01-JAN-00') AND RECEIPTSTATUS NOT IN (98)
) Z;
SELECT RUNTIME, RPTDATE, COUNT(*) CNT  FROM TDREC_TDMTD GROUP BY RUNTIME, RPTDATE;
--==============================================================================================================================
DROP TABLE TDREC_TDMTD_FNL PURGE;
CREATE TABLE TDREC_TDMTD_FNL AS
SELECT Z.* FROM (
SELECT A1.*,
CASE 
WHEN A1.ACCTTYPE IN (5,66) THEN 'Co-op Credit Society'
WHEN A1.ACCTTYPE IN (36,64) THEN 'Other Co-op Socities'
WHEN A1.ACCTTYPE IN (99) THEN 'Bank (UCBs)'
WHEN A1.ACCTTYPE IN (4,10,12,13,15,16,17,18,58,72,76,96,31,32,33,34,35,37,38,39,40,61,62,63,67,68,69,71,90,93) THEN 'Institution other than Co-op Credit Soc. and Other Co-op Soc'
WHEN A1.ACCTTYPE IN (1,2,3,6,7,8,9,11,19,20,21,25,26,51,52,53,54,56,57,59,60,65,70,75,77,80,91,92,94,95,97) THEN 'Individuals'	
WHEN A1.ACCTTYPE NOT IN (1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,25,26,36,51,52,53,54,56,57,58,59,60,64,65,66,70,72,75,76,77,80,91,92,94,95,96,97,99,31,32,33,34,35,37,38,39,40,61,62,63,67,68,69,71,90,93) THEN 'Not Defined'
END AS ACCTTYPE_CHK,
C1.INDOTH, (SELECT CODEDESC FROM ACBL.D001002@MISPROD WHERE CODETYPE = 1060 AND CODE = C1.INDOTH) INDOTH_DESC,
(CASE WHEN C1.INDOTH = 1 THEN C2.CUSTYPE WHEN C1.INDOTH = 2 THEN C3.ORGTYPE ELSE 0 END) AS CUS_ORG_TYPE,
(CASE WHEN C1.INDOTH = 1 THEN C22.CODEDESC WHEN C1.INDOTH = 2 THEN C33.CODEDESC ELSE ' ' END) AS CUS_ORG_TYPE_DESC
FROM (
SELECT * FROM TDREC_TDMTD
) A1
LEFT JOIN ACBL.D009011@MISPROD C1 ON A1.CUSTNO = C1.CUSTNO
LEFT JOIN ACBL.D009012@MISPROD C2 ON A1.CUSTNO = C2.CUSTNO
LEFT JOIN ACBL.D009013@MISPROD C3 ON A1.CUSTNO = C3.CUSTNO
LEFT JOIN ACBL.D001002@MISPROD C22 ON C2.CUSTYPE = C22.CODE AND C22.CODETYPE = 1131
LEFT JOIN ACBL.D001002@MISPROD C33 ON C3.ORGTYPE = C33.CODE AND C33.CODETYPE = 1162
) Z;
COMMIT;
SELECT RUNTIME, COUNT(1) CNT FROM TDREC_TDMTD_FNL GROUP BY RUNTIME;
--==============================================================================================================================
DROP TABLE TESTDB.SHRFINAL_TMP;
DROP TABLE TESTDB.SHRFINAL_TMP2;
DROP TABLE TESTDB.SHRFINAL_1;
DROP TABLE TESTDB.SHRFINAL;
COMMIT;
define strAsOnDate=TRUNC(SYSDATE-1);
CREATE TABLE SHRFINAL_TMP AS 
SELECT B.LBRCODE, SUBSTR(B.PRDACCTID,1,8) AS PRDCD,  SUBSTR(B.PRDACCTID,1,24) AS PACID,  D.CBLDATE, NVL(D.BALANCE1,0)  AS CBL_SHR_AMT FROM ACBL.D048004@MISPROD B 
INNER JOIN ACBL.D010014@MISPROD D ON D.LBRCODE=B.LBRCODE AND D.PRDACCTID =B.PRDACCTID AND D.CBLDATE IN (SELECT MAX(E.CBLDATE) FROM ACBL.D010014@MISPROD E WHERE E.LBRCODE=D.LBRCODE AND E.PRDACCTID=D.PRDACCTID AND E.CBLDATE<= &strAsOnDate)
WHERE B.LBRCODE = 902 AND TRIM(SUBSTR(B.PRDACCTID,1,8)) IN('SHR') ORDER BY B.LBRCODE, B.PRDACCTID;

CREATE TABLE SHRFINAL_TMP2 AS SELECT PACID, SUM(CBL_SHR_AMT) AS TOTSHARE  FROM SHRFINAL_TMP GROUP BY PACID HAVING SUM(CBL_SHR_AMT) > 0 ORDER BY PACID;

CREATE TABLE SHRFINAL      AS SELECT A.*, B.ACCTTYPE, (SELECT CODEDESC FROM (SELECT  cast(Code as integer) as CODE, CodeDesc FROM ACBL.D001002@MISPROD WHERE CodeType = '1067') WHERE  CODE = B.ACCTTYPE) CODEDESC FROM SHRFINAL_TMP2 A LEFT OUTER JOIN ACBL.D009022@MISPROD B ON B.LBRCODE = 902 AND A.PACID = SUBSTR(B.PRDACCTID,1,24) ORDER BY A.PACID;
COMMIT;

--SELECT * FROM SHRFINAL order by pacid desc;
--SELECT A.*,B.DATEOPEN FROM SHRFINAL A LEFT OUTER JOIN ACBL.D009022@MISPROD B ON B.LBRCODE = 902 AND A.PACID = SUBSTR(B.PRDACCTID,1,24) order by pacid desc;

ALTER TABLE SHRFINAL ADD LBRCODE NUMBER(6) DEFAULT 902;
ALTER TABLE SHRFINAL ADD CUSTNO  NUMBER(9);    
--SELECT LBRCODE, SUBSTR(PACID,1,8) AS PRDCD, COUNT(1) FROM SHRFINAL GROUP BY LBRCODE, SUBSTR(PACID,1,8);
COMMIT;

MERGE INTO SHRFINAL A USING ACBL.D009022@MISPROD B ON 
(A.LBRCODE= B.LBRCODE AND TRIM(A.PACID) = SUBSTR(B.PRDACCTID,1,24)) WHEN MATCHED THEN UPDATE SET A.CUSTNO = B.CUSTNO;
COMMIT;

---SELECT * FROM SHRFINAL;

===============================================================================================================================

SELECT SYSDATE  FROM DUAL;
SELECT TO_CHAR(SYSDATE,'DD-MM-YYYY HH24:MI:SS') FROM DUAL;

==================================================VCR_TSG> '31-MAR-2021'

--DROP TABLE  VCR_TSG PURGE;
--CREATE TABLE VCR_TSG AS SELECT * FROM ACBL.D009040@MISPROD WHERE ENTRYDATE BETWEEN '01-APR-2022'  AND TRUNC(SYSDATE-1) AND CANCELEDFLAG <> 'C' ;
--COMMIT;

==============================================================================================================================================================
----ALWAYS TAKE ONE DAY PRIOR TO FIN YEAR END DATE 


--define strFromDate     ="'01-Jan-2023'"
--define strToDate       ="'31-Jan-2023'"

--DROP TABLE TEMP.TSG_VCR_01_JAN_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_01_JAN_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate;
--COMMIT;

--define strFromDate     ="'01-Feb-2023'"
--define strToDate       ="'28-Feb-2023'"

--DROP TABLE TEMP.TSG_VCR_02_FEB_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_02_FEB_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate;
--COMMIT;

--define strFromDate     ="'01-Mar-2023'"
--define strToDate       ="'31-Mar-2023'"

--DROP TABLE TEMP.TSG_VCR_03_MAR_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_03_MAR_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate;
--COMMIT;


--define strFromDate     ="'01-APR-2023'"
--define strToDate       ="'30-APR-2023'"

--DROP TABLE TEMP.TSG_VCR_04_APR_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_04_APR_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;


--define strFromDate     ="'01-MAY-2023'"
--define strToDate       ="'31-MAY-2023'"

--DROP TABLE TEMP.TSG_VCR_05_MAY_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_05_MAY_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate  AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-JUN-2023'"
--define strToDate       ="'30-JUN-2023'"

--DROP TABLE TEMP.TSG_VCR_06_JUN_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_06_JUN_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate  AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-JUL-2023'"
--define strToDate       ="'31-JUL-2023'"

--DROP TABLE TEMP.TSG_VCR_07_JUL_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_07_JUL_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-AUG-2023'"
--define strToDate       ="'31-AUG-2023'"

--DROP TABLE TEMP.TSG_VCR_08_AUG_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_08_AUG_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-SEP-2023'"
--define strToDate       ="'30-SEP-2023'"

--DROP TABLE TEMP.TSG_VCR_09_SEP_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_09_SEP_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;


--define strFromDate     ="'01-OCT-2023'"
--define strToDate       ="'31-OCT-2023'"

--DROP TABLE TEMP.TSG_VCR_10_OCT_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_10_OCT_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;


--define strFromDate     ="'01-NOV-2023'"
--define strToDate       ="'30-NOV-2023'"

--DROP TABLE TEMP.TSG_VCR_11_NOV_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_11_NOV_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;


--define strFromDate     ="'01-DEC-2023'"
--define strToDate       ="'31-DEC-2023'"

--DROP TABLE TEMP.TSG_VCR_12_DEC_23 PURGE;
--CREATE TABLE TEMP.TSG_VCR_12_DEC_23 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;


--define strFromDate     ="'01-JAN-2024'"
--define strToDate       ="'31-JAN-2024'"

--DROP TABLE TEMP.TSG_VCR_01_JAN_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_01_JAN_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-FEB-2024'"
--define strToDate       ="'29-FEB-2024'"

--DROP TABLE TEMP.TSG_VCR_02_FEB_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_02_FEB_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;


--define strFromDate     ="'01-MAR-2024'"
--define strToDate       ="'31-MAR-2024'"

--DROP TABLE TEMP.TSG_VCR_03_MAR_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_03_MAR_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-APR-2024'"
--define strToDate       ="'30-APR-2024'"

--DROP TABLE TEMP.TSG_VCR_04_APR_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_04_APR_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;


--define strFromDate     ="'01-MAY-2024'"
--define strToDate       ="'31-MAY-2024'"

--DROP TABLE TEMP.TSG_VCR_05_MAY_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_05_MAY_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;


--define strFromDate     ="'01-JUN-2024'"
--define strToDate       ="'30-JUN-2024'"

--DROP TABLE TEMP.TSG_VCR_06_JUN_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_06_JUN_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-JUL-2024'"
--define strToDate       ="'31-JUL-2024'"

--DROP TABLE TEMP.TSG_VCR_07_JUL_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_07_JUL_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-AUG-2024'"
--define strToDate       ="'31-AUG-2024'"

--DROP TABLE TEMP.TSG_VCR_08_AUG_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_08_AUG_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;


--define strFromDate     ="'01-SEP-2024'"
--define strToDate       ="'30-SEP-2024'"

--DROP TABLE TEMP.TSG_VCR_09_SEP_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_09_SEP_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;


--define strFromDate     ="'01-OCT-2024'"
--define strToDate       ="'31-OCT-2024'"

--DROP TABLE TEMP.TSG_VCR_10_OCT_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_10_OCT_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-NOV-2024'"
--define strToDate       ="'30-NOV-2024'"

--DROP TABLE TEMP.TSG_VCR_11_NOV_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_11_NOV_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-DEC-2024'"
--define strToDate       ="'31-DEC-2024'"

--DROP TABLE TEMP.TSG_VCR_12_DEC_24 PURGE;
--CREATE TABLE TEMP.TSG_VCR_12_DEC_24 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-JAN-2025'"
--define strToDate       ="'31-JAN-2025'"

--DROP TABLE TEMP.TSG_VCR_01_JAN_25 PURGE;
--CREATE TABLE TEMP.TSG_VCR_01_JAN_25 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-FEB-2025'"
--define strToDate       ="'28-FEB-2025'"

--DROP TABLE TEMP.TSG_VCR_02_FEB_25 PURGE;
--CREATE TABLE TEMP.TSG_VCR_02_FEB_25 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-MAR-2025'"
--define strToDate       ="'31-MAR-2025'"

--DROP TABLE TEMP.TSG_VCR_03_MAR_25 PURGE;
--CREATE TABLE TEMP.TSG_VCR_03_MAR_25 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-APR-2025'"
--define strToDate       ="'30-APR-2025'"

--DROP TABLE TEMP.TSG_VCR_04_APR_25 PURGE;
--CREATE TABLE TEMP.TSG_VCR_04_APR_25 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

--define strFromDate     ="'01-MAY-2025'"
--define strToDate       ="'31-MAY-2025'"

--DROP TABLE TEMP.TSG_VCR_05_MAY_25 PURGE;
--CREATE TABLE TEMP.TSG_VCR_05_MAY_25 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
--COMMIT;

define strFromDate     ="'01-JUN-2025'"
define strToDate       ="'30-JUN-2025'"

DROP TABLE TEMP.TSG_VCR_06_JUN_25 PURGE;
CREATE TABLE TEMP.TSG_VCR_06_JUN_25 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
COMMIT;


define strFromDate     ="'01-JUL-2025'"
define strToDate       ="'31-JUL-2025'"

DROP TABLE TEMP.TSG_VCR_07_JUL_25 PURGE;
CREATE TABLE TEMP.TSG_VCR_07_JUL_25 AS SELECT sysdate as RUNTIME, A.* FROM ACBL.D009040@MISPROD A WHERE A.POSTDATE BETWEEN &strFromDate AND &strToDate AND CANCELEDFLAG <> 'C';
COMMIT;


CREATE OR REPLACE VIEW TEMP.VCR_TSG_VIEW AS 
SELECT Z.* FROM 
(
SELECT * FROM TEMP.TSG_VCR_04_APR_24
UNION ALL
SELECT * FROM TEMP.TSG_VCR_05_MAY_24
UNION ALL
SELECT * FROM TEMP.TSG_VCR_06_JUN_24
UNION ALL
SELECT * FROM TEMP.TSG_VCR_07_JUL_24
UNION ALL
SELECT * FROM TEMP.TSG_VCR_08_AUG_24
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_09_SEP_24
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_10_OCT_24
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_11_NOV_24
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_12_DEC_24
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_01_JAN_25
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_02_FEB_25
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_03_MAR_25
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_04_APR_25
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_05_MAY_25
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_06_JUN_25
UNION ALL 
SELECT * FROM TEMP.TSG_VCR_07_JUL_25
)Z;
COMMIT;


==================================================================================================================================================================================
==================================================================================================================================================================================

DROP TABLE TEMP.VCR_TSG_VIEW_SUMMARY PURGE;
CREATE TABLE TEMP.VCR_TSG_VIEW_SUMMARY AS 
SELECT Z.* FROM (
SELECT RUNTIME, COUNT(1) CNT, MIN(ENTRYDATE) MIN_ENTRYDATE, MAX(ENTRYDATE) MAX_ENTRYDATE, MIN(POSTDATE) MIN_POSTDATE, MAX(POSTDATE) MAX_POSTDATE, SUM(FCYTRNAMT) SUM_FCYTRNAMT 
FROM TEMP.TSG_VCR_01_JAN_24 GROUP BY RUNTIME
UNION
SELECT RUNTIME, COUNT(1) CNT, MIN(ENTRYDATE) MIN_ENTRYDATE, MAX(ENTRYDATE) MAX_ENTRYDATE, MIN(POSTDATE) MIN_POSTDATE, MAX(POSTDATE) MAX_POSTDATE, SUM(FCYTRNAMT) SUM_FCYTRNAMT 
FROM TEMP.TSG_VCR_02_FEB_24 GROUP BY RUNTIME
UNION
SELECT RUNTIME, COUNT(1) CNT, MIN(ENTRYDATE) MIN_ENTRYDATE, MAX(ENTRYDATE) MAX_ENTRYDATE, MIN(POSTDATE) MIN_POSTDATE, MAX(POSTDATE) MAX_POSTDATE, SUM(FCYTRNAMT) SUM_FCYTRNAMT 
FROM TEMP.TSG_VCR_03_MAR_24 GROUP BY RUNTIME
) Z;
COMMIT;
SELECT COUNT(*) FROM TEMP.VCR_TSG_VIEW_SUMMARY;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
/* ADDED ON 21/04/2023 AUTHOR SVS1068 */
INSERT INTO SVS1068.ALL_OK_MODULE_11_12_13_20_30_31_48
SELECT 
SYSDATE RUNTIME, 
CASE 
WHEN NVL(LBRCODE_JOT,0) = 0 THEN 'CHK_ALL_OK'
WHEN (GL_OS-JOT_OS) <> 0 THEN 'CHK_ALL_OK' ELSE ' ' END AS CHK_ALL_OK,
MAX(CBLDATE) OVER () RPTDATE,
LBRCODE, LBRCODE_DESC, MODULETYPE, PRDCD, PRDCD_DESC, CBLDATE, GL_OS, LBRCODE_JOT, MODULETYPE_JOT, PRDCD_JOT, JOT_COUNT, JOT_OS,
(GL_OS-JOT_OS) DIFF_OS
FROM (
SELECT * FROM (
SELECT Y.* FROM (
SELECT A.LBRCODE, BRNAME LBRCODE_DESC,  
B.MODULETYPE, TRIM(A.PRDCD) PRDCD,  B.NAME PRDCD_DESC,
CBLDATE, BALANCE4 GL_OS  
FROM GLMAS A
LEFT JOIN ACBL.D009021@MISPROD B ON A.LBRCODE = B.LBRCODE AND TRIM(A.PRDCD) = TRIM(B.PRDCD)
WHERE B.MODULETYPE IN (11,12,13,20,30,31,47)
AND A.PRDCD NOT LIKE 'WO%'
UNION
SELECT A.LBRCODE, BRNAME LBRCODE_DESC,  
B.MODULETYPE, TRIM(A.PRDCD) PRDCD,  B.NAME PRDCD_DESC,
CBLDATE, BALANCE4 GL_OS  
FROM GLMAS A
LEFT JOIN ACBL.D009021@MISPROD B ON A.LBRCODE = B.LBRCODE AND TRIM(A.PRDCD) = TRIM(B.PRDCD)
WHERE TRIM(A.PRDCD) IN ('SHRCAP', 'PNCPSCAP') 
) Y
) GL
LEFT JOIN (--JOT
SELECT LBRCODE LBRCODE_JOT, MODULETYPE MODULETYPE_JOT, PRDCD PRDCD_JOT, JOT_COUNT, JOT_OS FROM (
--CHKMAS--
SELECT LBRCODE, MODULETYPE, PRDCD, COUNT(JOT_OS) JOT_COUNT, SUM(JOT_OS) JOT_OS FROM (--B
SELECT A.LBRCODE, A.MODULETYPE, TRIM(A.PRDCD) PRDCD, A.BALANCE4 JOT_OS
FROM CHKMAS A
) B
GROUP BY LBRCODE, MODULETYPE, PRDCD
UNION
--TDREC--
SELECT LBRCODE, MODULETYPE, PRDCD, COUNT(JOT_OS) JOT_COUNT, SUM(JOT_OS) JOT_OS FROM (--B
SELECT A.LBRCODE, A.MODULETYPE, TRIM(A.PRDCD) PRDCD, A.FINALBAL JOT_OS
FROM TDREC A
) B
GROUP BY LBRCODE, MODULETYPE, PRDCD
UNION
--LNMAS_FN--
SELECT LBRCODE, MODULETYPE, PRDCD, COUNT(JOT_OS) JOT_COUNT, SUM(JOT_OS) JOT_OS FROM (--B
SELECT A.LBRCODE, A.MODULETYPE, TRIM(A.PRDCD) PRDCD, A.OS JOT_OS
FROM LNMAS_FN A
) B
GROUP BY LBRCODE, MODULETYPE, PRDCD
UNION
--SHARE CAPITAL --
SELECT Y.* FROM (
SELECT LBRCODE_JOT, MODULETYPE, PRDCD_JOT, COUNT(PRDCD_JOT)  JOT_COUNT, SUM(JOT_OS) JOT_OS FROM (--X
SELECT 
E.* FROM (--E
SELECT 
LBRCODE_JOT,  PRDACCTID_24, 
48 MODULETYPE,
  SUM(JOT_OS) JOT_OS FROM (--D
SELECT A.LBRCODE LBRCODE_JOT, A.PRDACCTID, SUBSTR(A.PRDACCTID,1,24) PRDACCTID_24, SUBSTR(A.PRDACCTID,1,8) AS PRDCD_JOT,  B.CBLDATE, NVL(B.BALANCE1,0) AS JOT_OS 
FROM ACBL.D048004@MISPROD A
INNER JOIN ACBL.D010014@MISPROD B ON A.LBRCODE = B.LBRCODE AND A.PRDACCTID = B.PRDACCTID 
AND B.CBLDATE = (SELECT MAX(C.CBLDATE) FROM ACBL.D010014@MISPROD C WHERE B.LBRCODE = C.LBRCODE AND B.PRDACCTID = C.PRDACCTID 
AND C.CBLDATE <= (SELECT MAX(CBLDATE) FROM GLMAS))
WHERE A.LBRCODE = 902 AND TRIM(SUBSTR(A.PRDACCTID,1,8)) IN ('SHR', 'PNCPS') 
ORDER BY A.LBRCODE, A.PRDACCTID
) D
WHERE JOT_OS <> 0
GROUP BY LBRCODE_JOT,  PRDACCTID_24, PRDCD_JOT
) E
) X
GROUP BY LBRCODE_JOT, MODULETYPE, PRDCD_JOT
) Y
) Z
) JOT
ON LBRCODE = LBRCODE_JOT AND PRDCD = PRDCD_JOT
ORDER BY LBRCODE, MODULETYPE, PRDCD
) FIN;
COMMIT;
----------------------------------------------------------------------------------------------
SELECT SYSDATE  FROM DUAL;
SELECT TO_CHAR(SYSDATE,'DD-MM-YYYY HH24:MI:SS') FROM DUAL;
EXIT;
----------------------------------------------------------------------------------------------


